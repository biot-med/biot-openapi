{"openapi":"3.0.1","info":{"title":"BioT Notification Service","description":"APIs document (version: 5.3.16)","version":"5.3.16"},"servers":[{"url":"/notification"}],"paths":{"/v1/configuration":{"get":{"tags":["Configuration API"],"summary":"Get service configuration","description":"Get service configuration\n\nRetrieves the service configuration properties that are supported by this API\n\nThis API requires **NOTIFICATION_CONFIGURATION_GET_CONFIGURATION** permission(s).\n\n","operationId":"getConfiguration","responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"SUCCESS","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConfigurationResponse"}}}}},"security":[{"bearerAuth":[]}]},"put":{"tags":["Configuration API"],"summary":"Set service configuration","description":"Set service configuration\n\nSet values to the service configuration properties that are support by this API\n\nThis API requires **NOTIFICATION_CONFIGURATION_SET_CONFIGURATION** permission(s).\n\n","operationId":"setConfiguration","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConfigurationRequest"}}},"required":true},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"SUCCESS","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConfigurationResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v1/system/permissions/sync":{"post":{"tags":["Sync Token Permissions Core API"],"description":"\n\n\n\nThis API requires **PERMISSIONS_FORCE_SYNC_PERMISSIONS** permission(s).\n\n","operationId":"forceSyncPermissions","responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"OK"}},"security":[{"bearerAuth":[]}]}},"/v1/sms/send":{"post":{"tags":["SMS API"],"summary":"Send sms","description":"Send sms\n\nWhen using AWS as the sms provider you are limited to 1 message per second by default. This can be changed\n\nThis API requires **NOTIFICATION_SEND_SMS** permission(s).\n\n","operationId":"sendSms","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendSmsRequest"}}},"required":true},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"SUCCESS","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendSmsResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v1/sms/phone":{"get":{"tags":["SMS Phone Number API"],"summary":"Search Aws Sms Phone entities by filter","description":"Search Aws Sms Phone entities by filter\n\nReturns list of Aws Sms Phone, the response can be filtered, sorted and supports pagination\n\n\n**For more information and examples on creating search requests, click <a href=\"https://docs.biot-med.com/docs/using-biot-search-apis\" target=\"_blank\">here.</a>**\n## Filter\nEach additionalProp can filter one field, inside additionalProp there are many optional conditions that can be used for filtering that field\n\nBy using the logical additionalProps $AND, $OR, $NOT, you can add complex nested logic filters. When sending these props, you must send only the nested filter field inside the filter value. This will allow you to group additional filters using logical AND/OR/NOT operators. When not sending a logic prop (including when not sending a nested logic prop), the props are bundled together using logical AND operators, this means that only the items that match all filter conditions for that field will be returned.\n\n***filter*** items possible values: [ *phone*,*senderId*,*countryCode*,*isDefault*,*creationTime*,*lastModifiedTime* ] \n\n## Sort\nResults can be sorted by multiple fields, the order of the fields in the sort request governs the hierarchy of the sort\n\nThe first field is the primary sort, the second is used when two values of the first field are the same, and so forth\n\n***sort.order*** default value is DESC\n\n***sort.prop*** possible values:[ *phone*,*senderId*,*countryCode*,*isDefault*,*creationTime*,*lastModifiedTime* ]\n\nIf sort was not specified, the result will be sorted by: creationTime DESC\n\n## Free text search\nWhen freeTextSearch is passed, the free text search will be performed on every field except those of type Date\n\nIf used together with filters, freeTextSearch will be bundled to the filters with the logical AND operator, this means that only items that match all filters (and each filter's conditions) and the free text search will be returned\n\n## Page\n***limit*** max number of results that will be returned for each page. If not specify, the default will be 100\n\n***page*** page number starting from 0. If not specify, the default will be 0\n\n## Build URL\nEncode the JSON object and use the encoded string as the searchRequest parameter:\n\nhttps://&lt;URL&gt;?searchRequest=<ENCODED_JSON_STRING>\n\nQuery Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|searchRequest||false|Search request parameters: filter, sort and page||\n\n\nThis API requires **NOTIFICATION_SEARCH_SMS_PHONE** permission(s).\n\n","operationId":"searchSmsPhone","parameters":[{"name":"searchRequest","in":"query","description":"Search request parameters: filter, sort and page","required":false,"content":{"*/*":{"schema":{"$ref":"#/components/schemas/SearchRequestV2"}}}}],"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|data|array|List of items that match the search request||\n|data[index]|array|List of items that match the search request||\n|data[index].phone|string|The phone from which to send the sms|12345678910|\n|data[index].senderId|string|The address from which the sms will be received from|bioT|\n|data[index].isDefault|boolean|Is this the default phone to use when sending sms messages|true|\n|data[index].countryCode|string|||\n|data[index].lastModifiedTime|string|||\n|data[index].creationTime|string|||\n|metadata|object|||\n|metadata.sort|array|Sort that was passed in the request||\n|metadata.sort[index]|array|Sort that was passed in the request||\n|metadata.sort[index].prop|string|The property name for the sort||\n|metadata.sort[index].order|string|The direction of sort. Default DESC Values:ASC,DESC|ASC|\n|metadata.filter|object|The filter that was passed in the request||\n|metadata.page|object|||\n|metadata.page.totalResults|integer|The total number of items that match the query|145|\n|metadata.page.page|integer|Page number|3|\n|metadata.page.limit|integer|Number of items per page|100|\n|metadata.freeTextSearch|string|Free text search strings that was passed in the request|cat dog|\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchResponseSmsPhoneResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]},"post":{"tags":["SMS Phone Number API"],"summary":"Create a new Aws Sms Phone","description":"Create a new Aws Sms Phone\n\n\n\nCreate a phone number to send SMS to in the AWS SMS provider.\nFirst number created must be set as default.\nEach country code can have at most one number\n\nRequest Body Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|phone|string|true|The phone from which to send the sms|12345678910|\n|senderId|string|true|The address from which the sms will be received from|bioT|\n|isDefault|boolean|true|Is this the default phone to use when sending sms messages|true|\n\n\nThis API requires **NOTIFICATION_CREATE_SMS_PHONE** permission(s).\n\n","operationId":"createSmsPhone","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateSmsPhoneRequest"}}},"required":true},"responses":{"400":{"description":"Code : CANNOT_PARSE_PHONE, Details: [phone]\n\nCode : DEFAULT_PHONE_MUST_BE_SET, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"201":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|phone|string|The phone from which to send the sms|12345678910|\n|senderId|string|The address from which the sms will be received from|bioT|\n|isDefault|boolean|Is this the default phone to use when sending sms messages|true|\n|countryCode|string|||\n|lastModifiedTime|string|||\n|creationTime|string|||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SmsPhoneResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"409":{"description":"Code : PHONE_ALREADY_EXISTS, Details: [phone]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v1/send-email":{"post":{"tags":["Email API"],"summary":"Send email","description":"Send email\n\nSend email with email template\n\nThis API requires **EMAIL_SEND_EMAIL** permission(s).\n\n","operationId":"sendEmail","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmailRequest"}}},"required":true},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"SUCCESS"}},"security":[{"bearerAuth":[]}]}},"/v1/attachment":{"post":{"tags":["Email API"],"summary":"Add attachment","description":"Add attachment\n\nAdd an attachment to be used in emails\n\nThis API requires **EMAIL_SEND_EMAIL** permission(s).\n\n","operationId":"addAttachment","requestBody":{"content":{"multipart/form-data":{"schema":{"required":["file"],"type":"object","properties":{"file":{"type":"string","format":"binary"}}}}}},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"SUCCESS","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddAttachmentResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v1/sms/phone/{phone}":{"get":{"tags":["SMS Phone Number API"],"summary":"Get Aws Sms Phone by ID","description":"Get Aws Sms Phone by ID\n\n\n\nPath Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|phone|string|true|null||\n\n\nThis API requires **NOTIFICATION_GET_SMS_PHONE** permission(s).\n\n","operationId":"getSmsPhone","parameters":[{"name":"phone","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|phone|string|The phone from which to send the sms|12345678910|\n|senderId|string|The address from which the sms will be received from|bioT|\n|isDefault|boolean|Is this the default phone to use when sending sms messages|true|\n|countryCode|string|||\n|lastModifiedTime|string|||\n|creationTime|string|||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SmsPhoneResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Code : PHONE_DOES_NOT_EXIST, Details: [phone]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]},"delete":{"tags":["SMS Phone Number API"],"summary":"Delete Aws Sms Phone","description":"Delete Aws Sms Phone\n\n\n\nTo delete the default number, first set another number to be the default instead.\n\nPath Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|phone|string|true|null||\n\n\nThis API requires **NOTIFICATION_DELETE_SMS_PHONE** permission(s).\n\n","operationId":"deleteSmsPhone","parameters":[{"name":"phone","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"204":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n"},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Code : PHONE_DOES_NOT_EXIST, Details: [phone]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"409":{"description":"Code : DEFAULT_PHONE_CANNOT_BE_DELETED, Details: [phone]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]},"patch":{"tags":["SMS Phone Number API"],"summary":"Update Aws Sms Phone","description":"Update Aws Sms Phone\n\nPerforms partial update, if a field is specified in the request it will be updated\n\nUpdate a phone number to send SMS to in the AWS SMS provider.\nIf a number is set as default, the previous default will be set as not default.\nTo set the default number as not default, first set another number to be the default instead.\n\nRequest Body Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|senderId|string|true|The address from which the sms will be received from|bioT|\n|isDefault|boolean|true|Is this the default phone to use when sending sms messages|true|\nPath Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|phone|string|true|null||\n\n\nThis API requires **NOTIFICATION_UPDATE_SMS_PHONE** permission(s).\n\n","operationId":"updateSmsPhone","parameters":[{"name":"phone","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateSmsPhoneRequest"}}},"required":true},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|phone|string|The phone from which to send the sms|12345678910|\n|senderId|string|The address from which the sms will be received from|bioT|\n|isDefault|boolean|Is this the default phone to use when sending sms messages|true|\n|countryCode|string|||\n|lastModifiedTime|string|||\n|creationTime|string|||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SmsPhoneResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Code : PHONE_DOES_NOT_EXIST, Details: [phone]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"409":{"description":"Code : DEFAULT_PHONE_CANNOT_BE_SET_NOT_DEFAULT, Details: [phone]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v1/configuration/sms-provider-configuration":{"get":{"tags":["Configuration API"],"summary":"Get is sms provider configured","description":"Get is sms provider configured\n\nReturn whether the service has configuration values for sms provider usage (e.g. Twilio)\n\nThis API requires **NOTIFICATION_CONFIGURATION_GET_SMS_PROVIDER_CONFIGURATION** permission(s).\n\n","operationId":"getSmsProviderConfiguration","responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"SUCCESS","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SmsProviderConfigurationResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/system/healthCheck":{"get":{"tags":["Health Check API"],"summary":"Service Health check API","description":"Service Health check API\n\nThe API returns 200 if the service is up, used by the Load Balancer\n\nThis API is **public**.\n\n","operationId":"healthCheck","responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VersionResponse"}}}}}}}},"components":{"schemas":{"ErrorResponse":{"type":"object","properties":{"code":{"type":"string","example":"EXAMPLE_CODE_ENTITY_NOT_FOUND"},"message":{"type":"string","example":"Entity with id [00000000-0000-0000-0000-000000000000] not found"},"serviceName":{"type":"string","example":"Device Service"},"traceId":{"type":"string","example":"a07a7e532f3541d8"},"environment":{"type":"string","example":"develop"},"details":{"type":"object","additionalProperties":{"type":"object"}}}},"ConfigurationRequest":{"required":["emailSenderAddress","emailSenderDisplayName"],"type":"object","properties":{"emailSenderDisplayName":{"maxLength":500,"minLength":0,"type":"string"},"emailSenderAddress":{"maxLength":500,"minLength":0,"type":"string"}}},"ConfigurationResponse":{"required":["emailSenderAddress","emailSenderDisplayName"],"type":"object","properties":{"emailSenderDisplayName":{"maxLength":500,"minLength":0,"type":"string"},"emailSenderAddress":{"maxLength":500,"minLength":0,"type":"string"}}},"SendSmsRequest":{"required":["message","phoneNumber"],"type":"object","properties":{"message":{"type":"string"},"phoneNumber":{"maxLength":15,"minLength":5,"pattern":"[+]?[0-9]+","type":"string"}}},"SendSmsResponse":{"type":"object","properties":{"messageId":{"type":"string"}}},"CreateSmsPhoneRequest":{"required":["isDefault","phone","senderId"],"type":"object","properties":{"phone":{"type":"string","description":"The phone from which to send the sms","example":"12345678910"},"senderId":{"maxLength":11,"minLength":0,"type":"string","description":"The address from which the sms will be received from","example":"bioT"},"isDefault":{"type":"boolean","description":"Is this the default phone to use when sending sms messages","example":true}}},"SmsPhoneResponse":{"required":["isDefault","phone","senderId"],"type":"object","properties":{"phone":{"type":"string","description":"The phone from which to send the sms","example":"12345678910"},"senderId":{"maxLength":11,"minLength":0,"type":"string","description":"The address from which the sms will be received from","example":"bioT"},"isDefault":{"type":"boolean","description":"Is this the default phone to use when sending sms messages","example":true},"countryCode":{"type":"string"},"lastModifiedTime":{"type":"string","format":"date-time"},"creationTime":{"type":"string","format":"date-time"}}},"EmailRequest":{"type":"object","properties":{"subject":{"type":"string"},"locale":{"type":"string"},"addressesTo":{"type":"array","items":{"type":"string"}},"addressesCC":{"type":"array","items":{"type":"string"}},"addressesBCC":{"type":"array","items":{"type":"string"}},"emailTemplate":{"$ref":"#/components/schemas/EmailTemplate"},"attachmentsKeysAndNames":{"type":"object","additionalProperties":{"type":"string"}}}},"EmailTemplate":{"type":"object","properties":{"templateId":{"type":"string"},"markingFields":{"type":"object","additionalProperties":{"type":"string"}},"components":{"type":"array","items":{"$ref":"#/components/schemas/EmailTemplate"}}}},"AddAttachmentResponse":{"type":"object","properties":{"key":{"type":"string"}}},"UpdateSmsPhoneRequest":{"required":["isDefault","senderId"],"type":"object","properties":{"senderId":{"maxLength":11,"minLength":0,"type":"string","description":"The address from which the sms will be received from","example":"bioT"},"isDefault":{"type":"boolean","description":"Is this the default phone to use when sending sms messages","example":true}}},"FilterV2":{"type":"object","properties":{"in":{"type":"array","description":"List of values for the IN operator","items":{"type":"string","description":"List of values for the IN operator"}},"eq":{"type":"object","description":"Value for the EQUAL (=) operator, string, numeric, boolean or object","example":50},"lt":{"type":"number","description":"Value for the LESS THAN (<) operator, numeric value only","example":20},"lte":{"type":"number","description":"Value for the LESS THAN OR EQUAL operator (<=), numeric value only","example":25},"gt":{"type":"number","description":"Value for the GREATER THAN operator (>), numeric value only","example":25},"gte":{"type":"number","description":"Value for the GREATER THAN OR EQUAL operator (>=), numeric value only","example":25},"like":{"type":"string","description":"Value for the CONTAINS operator (substring), string value only","example":"John"},"from":{"type":"string","description":"Value for the DATE RANGE FROM operator, date value only,A UTC date in the ISO-8601 format","format":"date-time"},"to":{"type":"string","description":"Value for the DATE RANGE TO operator, date value only,A UTC date in the ISO-8601 format","format":"date-time"},"isNull":{"type":"boolean","description":"If set to true, checks if the field's value is null","example":true},"isNotNull":{"type":"boolean","description":"If set to true, checks if the field's value is not null","example":true},"not":{"type":"object","description":"Value for the NOT EQUAL (!=) operator, string, numeric, boolean or object","example":50},"notIn":{"type":"array","description":"List of values for the NOT IN operator","items":{"type":"string","description":"List of values for the NOT IN operator"}},"filter":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/FilterV2"},"description":"Used for complex logic with filters. Must be supplied only when using with map keys $OR, $AND, $NOT"}},"description":"Each additionalProp can filter one field, inside additionalProp there are many optional conditions that can be used for filtering that field. When multiple conditions are specified, they are bundled together using logical AND operators, this means that only the items that match all filter conditions for that field will be returned"},"Order":{"required":["prop"],"type":"object","properties":{"prop":{"type":"string","description":"The property name for the sort"},"order":{"type":"string","description":"The direction of sort. Default DESC","example":"ASC","enum":["ASC","DESC"]}},"description":"Results can be sorted by multiple fields, the order of the fields in the sort request governs the hierarchy of the sort.The first field is the primary sort, the second is used when two values of the first field are the same, and so forth"},"SearchRequestV2":{"type":"object","properties":{"filter":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/FilterV2"},"description":"Each additionalProp can filter one field, inside additionalProp there are many optional conditions that can be used for filtering that field. When multiple conditions are specified, they are bundled together using logical AND operators, this means that only the items that match all filter conditions for that field will be returned"},"sort":{"type":"array","description":"Results can be sorted by multiple fields, the order of the fields in the sort request governs the hierarchy of the sort.The first field is the primary sort, the second is used when two values of the first field are the same, and so forth","items":{"$ref":"#/components/schemas/Order"}},"freeTextSearch":{"type":"string","description":"Free text search strings - will be bundled to the filters with the logical AND operator. Possible to pass a few strings with space between them, the search will return a result if one of strings appears in the data entity (OR operator).","example":"cat dog"},"limit":{"minimum":1,"type":"integer","format":"int32"},"page":{"minimum":0,"type":"integer","format":"int32"}}},"Metadata":{"type":"object","properties":{"sort":{"type":"array","description":"Sort that was passed in the request","items":{"$ref":"#/components/schemas/Order"}},"filter":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/FilterV2"},"description":"The filter that was passed in the request"},"page":{"$ref":"#/components/schemas/PageMetadata"},"freeTextSearch":{"type":"string","description":"Free text search strings that was passed in the request","example":"cat dog"}}},"PageMetadata":{"type":"object","properties":{"totalResults":{"type":"integer","description":"The total number of items that match the query","format":"int64","example":145},"page":{"type":"integer","description":"Page number","format":"int32","example":3},"limit":{"type":"integer","description":"Number of items per page","format":"int32","example":100}}},"SearchResponseSmsPhoneResponse":{"required":["data","metadata"],"type":"object","properties":{"data":{"type":"array","description":"List of items that match the search request","items":{"$ref":"#/components/schemas/SmsPhoneResponse"}},"metadata":{"$ref":"#/components/schemas/Metadata"}}},"SmsProviderConfigurationResponse":{"type":"object","properties":{"configured":{"type":"boolean"}}},"VersionResponse":{"type":"object","properties":{"version":{"type":"string"},"springVersion":{"type":"string"},"traceId":{"type":"string"}}}},"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}}}}