{"openapi":"3.0.1","info":{"title":"BioT Measurement Service","description":"APIs document (version: 2.3.7)","version":"2.3.7"},"servers":[{"url":"/measurement"}],"paths":{"/v1/measurements":{"post":{"tags":["Measurements API"],"summary":"Post measurement","description":"Post measurement\n\n\n\nSave measurements API\n\nRequest Body Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|metadata|object|false|||\n|metadata.timestamp|string|false|||\n|metadata.deviceId|string|false|||\n|metadata.patientId|string|false|||\n|metadata.sessionId|string|false|||\n|data|object|false|||\n\n\nThis API requires **PROTECTED_API** permission(s).\n\n","operationId":"saveMeasurement","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MeasurementMessageFromDevice"}}},"required":true},"responses":{"400":{"description":"Code : TIMESTREAM_WRITE_RECORDS_FAILED, Details: []\n\nCode : WAVEFORM_METADATA_SIZE_MISMATCH, Details: [attributeName, metadataSize, waveformDataSize]\n\nCode : INVALID_WAVEFORM_DATA, Details: [attributeName, encodedData]\n\nCode : INVALID_FREQUENCY, Details: [attributeName, frequency]\n\nCode : INVALID_MEASUREMENT_DATA, Details: [attributeName, dataType]\n\nCode : SOME_MEASUREMENTS_FAILED_TO_BE_WRITTEN_TO_DB, Details: [validationExceptionMessages]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|metadata|object|||\n|metadata.timestamp|string|||\n|metadata.deviceId|string|||\n|metadata.patientId|string|||\n|metadata.sessionId|string|||\n|data|object|||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MeasurementMessageFromDevice"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"413":{"description":"Code : MEASUREMENT_MESSAGE_EXCEEDS_SIZE_LIMITATION, Details: [measurementMessageSizeInMB, measurementMessageMaxSizeInMB]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v1/measurements/bulk":{"post":{"tags":["Measurements API"],"summary":"Post measurements in bulk","description":"Post measurements in bulk\n\n\n\nSave measurements bulk API\n\nRequest Body Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|measures|array|false|List of measurement to be written to  the DB||\n|measures[index]|array|false|List of measurement to be written to  the DB||\n|measures[index].metadata|object|false|||\n|measures[index].metadata.timestamp|string|false|||\n|measures[index].metadata.deviceId|string|false|||\n|measures[index].metadata.patientId|string|false|||\n|measures[index].metadata.sessionId|string|false|||\n|measures[index].data|object|false|||\n\n\nThis API requires **PROTECTED_API** permission(s).\n\n","operationId":"saveMeasurementsBulk","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MeasurementBulkRequest"}}},"required":true},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"206":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MeasurementBulkResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MeasurementBulkResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"413":{"description":"Code : MEASUREMENT_MESSAGE_EXCEEDS_SIZE_LIMITATION, Details: [measurementMessageSizeInMB, measurementMessageMaxSizeInMB]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v2/measurements/raw":{"get":{"tags":["Measurements V2 API"],"summary":"Search Raw Measurements entities by filter","description":"Search Raw Measurements entities by filter\n\nReturns list of Raw Measurements, the response can be filtered, sorted and supports pagination\n\n\n## Filter\nEach additionalProp can filter one field, inside additionalProp there are many optional conditions that can be used for filtering that field\n\nWhen multiple conditions are specified, they are bundled together using logical AND operators, this means that only the items that match all filter conditions for that field will be returned\n\n***filter*** items possible values: [ *_patient.id - Eq only*,*timestamp*,*attributes - in only* ] \n\n## Sort\nResults can be sorted by multiple fields, the order of the fields in the sort request governs the hierarchy of the sort\n\nThe first field is the primary sort, the second is used when two values of the first field are the same, and so forth\n\n***sort.order*** default value is DESC\n\n***sort.prop*** possible values:[  ]\n\nIf sort was not specified, the result will be sorted by: creationTime DESC\n\n## Free text search\nWhen freeTextSearch is passed, the free text search will be performed on every field except those of type Date\n\nIf used together with filters, freeTextSearch will be bundled to the filters with the logical AND operator, this means that only items that match all filters (and each filter's conditions) and the free text search will be returned\n\n## Page\n***limit*** max number of results that will be returned for each page. If not specify, the default will be 100\n\n***page*** page number starting from 0. If not specify, the default will be 0\n\n## Build URL\nEncode the JSON object and use the encoded string as the searchRequest parameter:\n\nhttps://&lt;URL&gt;?searchRequest=<ENCODED_JSON_STRING>\n\n_patient.id support only 'eq' operator, timestamp support only 'from' & 'to' operators. - these operators are also mandatory. attributes supports only 'in' operator\n\nQuery Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|searchRequest||true|Search request parameters: filter, sort and page||\n\n\nThis API requires **PROTECTED_API** permission(s).\n\n","operationId":"getRawMeasurements2","parameters":[{"name":"searchRequest","in":"query","description":"Search request parameters: filter, sort and page","required":true,"content":{"*/*":{"schema":{"$ref":"#/components/schemas/SearchRequestTokenBased"}}}}],"responses":{"400":{"description":"Code : MISSING_MANDATORY_FILTER, Details: [filter]\n\nCode : TIMESTAMP_FROM_TO_MISSING, Details: []\n\nCode : PATIENT_ID_EQ_MISSING, Details: []\n\nCode : TIME_BEFORE_MIN_TIME, Details: [startTime, endTime, minTime]\n\nCode : INVALID_TIME_RANGE, Details: [startTime, currentTime, endTime]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|data|array|List of items that match the search request||\n|data[index]|array|List of items that match the search request||\n|data[index].patientId|string|||\n|data[index].sessionId|string|||\n|data[index].sourceEntityId|string|||\n|data[index].timestamp|string|||\n|data[index].data|object|||\n|metadata|object|||\n|metadata.sort|array|Sort that was passed in the request||\n|metadata.sort[index]|array|Sort that was passed in the request||\n|metadata.sort[index].prop|string|The property name for the sort||\n|metadata.sort[index].order|string|The direction of sort. Default DESC Values:ASC,DESC|ASC|\n|metadata.filter|object|The filter that was passed in the request||\n|metadata.nextToken|string|Next token that should be supplied when requesting a new page, empty of there are no next page||\n|metadata.limitPerPage|integer|Limit of items||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchResponseTokenBasedRawMeasurementV2"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v1/measurements/raw":{"get":{"tags":["Measurements API"],"summary":"Get raw measurements","description":"Get raw measurements\n\n\n\nGet all measurements for attributes and time\n\nQuery Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|flatRequest|null|true|null||\n\n\nThis API requires **PROTECTED_API** permission(s).\n\n","operationId":"getRawMeasurements","parameters":[{"name":"flatRequest","in":"query","required":true,"schema":{"$ref":"#/components/schemas/GetRawMeasurementsRequest"}}],"responses":{"400":{"description":"Code : INVALID_TIME_RANGE, Details: [startTime, currentTime, endTime]\n\nCode : ATTRIBUTE_NOT_FOUND, Details: [attributeNames]\n\nCode : ATTRIBUTE_IS_NOT_AGGREGATABLE, Details: [attributesAggregatable]\n\nCode : TIME_BEFORE_MIN_TIME, Details: [startTime, endTime, minTime]\n\nCode : EXCEED_MAX_TIME_RANGE, Details: [startTime, endTime, maxTimeRange]\n\nCode : ATTRIBUTE_IS_NOT_ALLOWED, Details: [attributes]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|attributes|array|||\n|attributes[index]|array|||\n|attributes[index].attributeName|string|||\n|attributes[index].sources|array|||\n|attributes[index].sources[index]|array|||\n|attributes[index].sources[index].sourceEntityId|string|||\n|attributes[index].sources[index].measurementSessions|array|||\n|attributes[index].sources[index].measurementSessions[index]|array|||\n|attributes[index].sources[index].measurementSessions[index].sessionId|string|||\n|attributes[index].sources[index].measurementSessions[index].measurements|array|||\n|attributes[index].sources[index].measurementSessions[index].measurements[index]|array|||\n|attributes[index].sources[index].measurementSessions[index].measurements[index].timestamp|string|||\n|attributes[index].sources[index].measurementSessions[index].measurements[index].frequency|integer|||\n|attributes[index].sources[index].measurementSessions[index].measurements[index].numberOfSample|integer|||\n|attributes[index].sources[index].measurementSessions[index].measurements[index].data|array|||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetRawMeasurementsResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v1/measurements/aggregated":{"get":{"tags":["Measurements API"],"summary":"Get aggregated measurements","description":"Get aggregated measurements\n\n\n\nGet all measurements for attributes and time\n\nQuery Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|flatRequest|null|true|null||\n\n\nThis API requires **PROTECTED_API** permission(s).\n\n","operationId":"getMeasurements","parameters":[{"name":"flatRequest","in":"query","required":true,"schema":{"$ref":"#/components/schemas/GetAggregatedMeasurementsRequest"}}],"responses":{"400":{"description":"Code : INVALID_TIME_RANGE, Details: [startTime, currentTime, endTime]\n\nCode : ATTRIBUTE_NOT_FOUND, Details: [attributeNames]\n\nCode : ATTRIBUTE_IS_NOT_AGGREGATABLE, Details: [attributesAggregatable]\n\nCode : INVALID_BIN_INTERVAL, Details: [binIntervalSeconds]\n\nCode : TIME_BEFORE_MIN_TIME, Details: [startTime, endTime, minTime]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|attributes|array|||\n|attributes[index]|array|||\n|attributes[index].attributeName|string|||\n|attributes[index].sources|array|||\n|attributes[index].sources[index]|array|||\n|attributes[index].sources[index].sourceEntityId|string|||\n|attributes[index].sources[index].measurementSessions|array|||\n|attributes[index].sources[index].measurementSessions[index]|array|||\n|attributes[index].sources[index].measurementSessions[index].sessionId|string|||\n|attributes[index].sources[index].measurementSessions[index].measurements|array|||\n|attributes[index].sources[index].measurementSessions[index].measurements[index]|array|||\n|attributes[index].sources[index].measurementSessions[index].measurements[index].timestamp|string|||\n|attributes[index].sources[index].measurementSessions[index].measurements[index].average|number|||\n|attributes[index].sources[index].measurementSessions[index].measurements[index].standardDeviation|number|||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetAggregatedMeasurementsResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/system/healthCheck":{"get":{"tags":["Health Check API"],"summary":"Service Health check API","description":"Service Health check API\n\nThe API returns 200 if the service is up, used by the Load Balancer\n\nThis API is **public**.\n\n","operationId":"healthCheck","responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VersionResponse"}}}}}}}},"components":{"schemas":{"ErrorResponse":{"type":"object","properties":{"code":{"type":"string","example":"EXAMPLE_CODE_ENTITY_NOT_FOUND"},"message":{"type":"string","example":"Entity with id [00000000-0000-0000-0000-000000000000] not found"},"serviceName":{"type":"string","example":"Device Service"},"traceId":{"type":"string","example":"a07a7e532f3541d8"},"environment":{"type":"string","example":"develop"},"details":{"type":"object","additionalProperties":{"type":"object"}}}},"MeasurementFromDeviceMetadata":{"type":"object","properties":{"timestamp":{"type":"string","format":"date-time"},"deviceId":{"type":"string"},"patientId":{"type":"string","format":"uuid"},"sessionId":{"type":"string","format":"uuid"}}},"MeasurementMessageFromDevice":{"type":"object","properties":{"metadata":{"$ref":"#/components/schemas/MeasurementFromDeviceMetadata"},"data":{"type":"object","additionalProperties":{"type":"object"}}}},"MeasurementBulkRequest":{"type":"object","properties":{"measures":{"type":"array","description":"List of measurement to be written to  the DB","items":{"$ref":"#/components/schemas/MeasurementMessageFromDevice"}}}},"FailedMeasurementMessageFromDevice":{"type":"object","properties":{"metadata":{"$ref":"#/components/schemas/MeasurementFromDeviceMetadata"},"data":{"type":"object","additionalProperties":{"type":"object"}},"failureData":{"type":"array","items":{"$ref":"#/components/schemas/FailureData"}}},"description":"List of measurement sent by the user and failed to be written to the DB"},"FailureData":{"type":"object","properties":{"attributeName":{"type":"string","description":"The name of the attribute that failed the measurement","example":"hr"},"description":{"type":"string","description":"Describing the reason that a specific measurement failed to be written to the DB","example":"Encoded data sent in waveform for attribute: int_wave is invalid. Data is: AABB=="},"code":{"type":"string","description":"The code of the exception that failed the measurement to be written to the DB","example":"INVALID_WAVEFORM_DATA"},"entireMessageFailure":{"type":"string","description":"Specifies if some data from the message was registered","example":"PARTIAL_MESSAGE_FAILURE","enum":["ENTIRE_MESSAGE_FAILURE","PARTIAL_MESSAGE_FAILURE","UNKNOWN"]}}},"MeasurementBulkMetadata":{"type":"object","properties":{"numberOfMeasuresSaved":{"type":"integer","description":"The number of measurement successfully written to the DB","format":"int32","example":5},"numberOfMeasuresFailed":{"type":"integer","description":"The number of measurement failed to be written to the DB","format":"int32","example":5}}},"MeasurementBulkResponse":{"type":"object","properties":{"metadata":{"$ref":"#/components/schemas/MeasurementBulkMetadata"},"failedMeasures":{"type":"array","description":"List of measurement sent by the user and failed to be written to the DB","items":{"$ref":"#/components/schemas/FailedMeasurementMessageFromDevice"}}}},"FilterV2":{"type":"object","properties":{"in":{"type":"array","description":"List of values for the IN operator","items":{"type":"string","description":"List of values for the IN operator"}},"eq":{"type":"object","description":"Value for the EQUAL (=) operator, string, numeric, boolean or object","example":50},"lt":{"type":"number","description":"Value for the LESS THAN (<) operator, numeric value only","example":20},"lte":{"type":"number","description":"Value for the LESS THAN OR EQUAL operator (<=), numeric value only","example":25},"gt":{"type":"number","description":"Value for the GREATER THAN operator (>), numeric value only","example":25},"gte":{"type":"number","description":"Value for the GREATER THAN OR EQUAL operator (>=), numeric value only","example":25},"like":{"type":"string","description":"Value for the CONTAINS operator (substring), string value only","example":"John"},"from":{"type":"string","description":"Value for the DATE RANGE FROM operator, date value only,A UTC date in the ISO-8601 format","format":"date-time"},"to":{"type":"string","description":"Value for the DATE RANGE TO operator, date value only,A UTC date in the ISO-8601 format","format":"date-time"},"isNull":{"type":"boolean","description":"If set to true, checks if the field's value is null","example":true},"isNotNull":{"type":"boolean","description":"If set to true, checks if the field's value is not null","example":true},"not":{"type":"object","description":"Value for the NOT EQUAL (!=) operator, string, numeric, boolean or object","example":50},"notIn":{"type":"array","description":"List of values for the NOT IN operator","items":{"type":"string","description":"List of values for the NOT IN operator"}}},"description":"Each additionalProp can filter one field, inside additionalProp there are many optional conditions that can be used for filtering that field. When multiple conditions are specified, they are bundled together using logical AND operators, this means that only the items that match all filter conditions for that field will be returned"},"Order":{"required":["prop"],"type":"object","properties":{"prop":{"type":"string","description":"The property name for the sort"},"order":{"type":"string","description":"The direction of sort. Default DESC","example":"ASC","enum":["ASC","DESC"]}},"description":"Results can be sorted by multiple fields, the order of the fields in the sort request governs the hierarchy of the sort.The first field is the primary sort, the second is used when two values of the first field are the same, and so forth"},"SearchRequestTokenBased":{"type":"object","properties":{"filter":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/FilterV2"},"description":"Each additionalProp can filter one field, inside additionalProp there are many optional conditions that can be used for filtering that field. When multiple conditions are specified, they are bundled together using logical AND operators, this means that only the items that match all filter conditions for that field will be returned"},"sort":{"type":"array","description":"Results can be sorted by multiple fields, the order of the fields in the sort request governs the hierarchy of the sort.The first field is the primary sort, the second is used when two values of the first field are the same, and so forth","items":{"$ref":"#/components/schemas/Order"}},"nextToken":{"type":"string","description":"Token for the next page"},"limitPerPage":{"type":"integer","description":"Maximum results per page","format":"int32"}}},"MetadataTokenBased":{"type":"object","properties":{"sort":{"type":"array","description":"Sort that was passed in the request","items":{"$ref":"#/components/schemas/Order"}},"filter":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/FilterV2"},"description":"The filter that was passed in the request"},"nextToken":{"type":"string","description":"Next token that should be supplied when requesting a new page, empty of there are no next page"},"limitPerPage":{"type":"integer","description":"Limit of items","format":"int32"}}},"RawMeasurementV2":{"type":"object","properties":{"patientId":{"type":"string"},"sessionId":{"type":"string"},"sourceEntityId":{"type":"string"},"timestamp":{"type":"string","format":"date-time"},"data":{"type":"object","additionalProperties":{"type":"object"},"writeOnly":true}},"description":"List of items that match the search request"},"SearchResponseTokenBasedRawMeasurementV2":{"required":["data"],"type":"object","properties":{"data":{"type":"array","description":"List of items that match the search request","items":{"$ref":"#/components/schemas/RawMeasurementV2"}},"metadata":{"$ref":"#/components/schemas/MetadataTokenBased"}}},"GetRawMeasurementsRequest":{"required":["endTime","patientId","startTime"],"type":"object","properties":{"attributes":{"type":"array","items":{"type":"string"}},"patientId":{"type":"string"},"sourceEntityId":{"type":"string"},"sessionId":{"type":"string"},"startTime":{"type":"string","format":"date-time"},"endTime":{"type":"string","format":"date-time"}}},"GetRawMeasurementsResponse":{"required":["attributes"],"type":"object","properties":{"attributes":{"type":"array","items":{"$ref":"#/components/schemas/MeasurementRawAttributes"}}}},"MeasurementRawAttributes":{"required":["attributeName","sources"],"type":"object","properties":{"attributeName":{"type":"string"},"sources":{"type":"array","items":{"$ref":"#/components/schemas/MeasurementRawSource"}}}},"MeasurementRawSource":{"required":["measurementSessions","sourceEntityId"],"type":"object","properties":{"sourceEntityId":{"type":"string"},"measurementSessions":{"type":"array","items":{"$ref":"#/components/schemas/RawMeasurementSessions"}}}},"RawMeasurement":{"required":["data","frequency","numberOfSample","timestamp"],"type":"object","properties":{"timestamp":{"type":"string","format":"date-time"},"frequency":{"type":"integer","format":"int32"},"numberOfSample":{"type":"integer","format":"int32"},"data":{"type":"array","items":{"type":"number"}}}},"RawMeasurementSessions":{"required":["measurements","sessionId"],"type":"object","properties":{"sessionId":{"type":"string"},"measurements":{"type":"array","items":{"$ref":"#/components/schemas/RawMeasurement"}}}},"GetAggregatedMeasurementsRequest":{"required":["binIntervalSeconds","endTime","patientId","startTime"],"type":"object","properties":{"attributes":{"type":"array","items":{"type":"string"}},"patientId":{"type":"string"},"sourceEntityId":{"type":"string"},"sessionId":{"type":"string"},"startTime":{"type":"string","format":"date-time"},"endTime":{"type":"string","format":"date-time"},"binIntervalSeconds":{"minimum":1,"type":"integer","format":"int64","example":1,"enum":[1,3,6,15,30,60,120,300,1800,10800,21600,43200,86400,172800,604800]}}},"GetAggregatedMeasurementsResponse":{"required":["attributes"],"type":"object","properties":{"attributes":{"type":"array","items":{"$ref":"#/components/schemas/MeasurementAttributes"}}}},"Measurement":{"type":"object","properties":{"timestamp":{"type":"string","format":"date-time"},"average":{"type":"number"},"standardDeviation":{"type":"number","format":"double"}}},"MeasurementAttributes":{"required":["attributeName","sources"],"type":"object","properties":{"attributeName":{"type":"string"},"sources":{"type":"array","items":{"$ref":"#/components/schemas/MeasurementSource"}}}},"MeasurementSession":{"required":["measurements","sessionId"],"type":"object","properties":{"sessionId":{"type":"string"},"measurements":{"type":"array","items":{"$ref":"#/components/schemas/Measurement"}}}},"MeasurementSource":{"required":["measurementSessions","sourceEntityId"],"type":"object","properties":{"sourceEntityId":{"type":"string"},"measurementSessions":{"type":"array","items":{"$ref":"#/components/schemas/MeasurementSession"}}}},"VersionResponse":{"type":"object","properties":{"version":{"type":"string"},"springVersion":{"type":"string"},"traceId":{"type":"string"}}}},"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}}}}