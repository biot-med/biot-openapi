{"openapi":"3.0.1","info":{"title":"BioT Dispatcher Server","description":"APIs document description for seed service","version":"2.0.20"},"servers":[{"url":"/dispatcher"}],"paths":{"/v1/hooks/notifications/unsubscribe":{"post":{"tags":["Subscription API"],"summary":"Unsubscribe from notifications for actions","description":"Unsubscribe from notifications for actions\n\n\n\nRequest Body Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|entityTypeName|string|true| Values:device,organization,organization-user,caregiver,patient,usage-session,generic-entity,command,device-alert,patient-alert,registration-code||\n|actionName|string|true| Values:_create,_update,_delete,_list,_command,_generateCertificate,_activateCertificate,_revokeCertificate,_operate,_read,_start,_stop,_remoteStart,_remoteStop,_remoteResume,_remotePause,_updateAdmin,_updateEnabledState,_login,_logout,_clear,_manage,_assign,_saveMeasurement,_monitor,_view,_saveMeasurementBulk||\n|endpoint|string|true|||\n\n\nThis API requires **DISPATCHER_SUBSCRIPTIONS_UNSUBSCRIBE** permission(s).\n\n","operationId":"unsubscribe","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnsubscribeRequest"}}},"required":true},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"204":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n"},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Code : SUBSCRIBER_NOT_FOUND, Details: [entityTypeName, actionName, endpoint]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v1/hooks/notifications/subscribe":{"post":{"tags":["Subscription API"],"summary":"Subscribe to get notifications for actions","description":"Subscribe to get notifications for actions\n\n\n\nIf a subscription (to same action entity and endpoint) is already exist, the call will result in a CONFLICT response\n\nRequest Body Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|entityTypeName|string|true| Values:device,organization,organization-user,caregiver,patient,usage-session,generic-entity,command,device-alert,patient-alert,registration-code||\n|actionName|string|true| Values:_create,_update,_delete,_list,_command,_generateCertificate,_activateCertificate,_revokeCertificate,_operate,_read,_start,_stop,_remoteStart,_remoteStop,_remoteResume,_remotePause,_updateAdmin,_updateEnabledState,_login,_logout,_clear,_manage,_assign,_saveMeasurement,_monitor,_view,_saveMeasurementBulk||\n|endpoint|string|true|||\n\n\nThis API requires **DISPATCHER_SUBSCRIPTIONS_SUBSCRIBE** permission(s).\n\n","operationId":"subscribe","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscribeRequest"}}},"required":true},"responses":{"400":{"description":"Code : INVALID_ACTION_NAME, Details: [invalidActionName, validActionNames]\n\nCode : INVALID_ENTITY_TYPE_NAME, Details: [invalidEntityType, validEntityTypes]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"201":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|entityTypeName|string| Values:device,organization,organization-user,caregiver,patient,usage-session,generic-entity,command,device-alert,patient-alert,registration-code||\n|actionName|string| Values:_create,_update,_delete,_list,_command,_generateCertificate,_activateCertificate,_revokeCertificate,_operate,_read,_start,_stop,_remoteStart,_remoteStop,_remoteResume,_remotePause,_updateAdmin,_updateEnabledState,_login,_logout,_clear,_manage,_assign,_saveMeasurement,_monitor,_view,_saveMeasurementBulk||\n|endpoint|string|||\n|id|string|||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscribeResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v1/hooks/interceptions/unsubscribe":{"post":{"tags":["Interception API"],"summary":"Unsubscribe a specific endpoint from intercepting API(s)","description":"Unsubscribe a specific endpoint from intercepting API(s)\n\n\n\nRequest Body Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|type|string|true| Values:PRE_REQUEST,POST_REQUEST,ADAPT_ENTITY||\n|apiId|string|true|Should only be provided if type=PRE_REQUEST or type=POST_REQUEST|POST/device/v1/devices|\n|entityName|string|true|Should only be provided if type=ADAPT_ENTITY|device|\n|endpoint|string|true||https://api.dev.biot-med.com/device-plugin/v1/devices/create-device-pre-interception|\n\n\nThis API requires **HOOKS_INTERCEPTION_DELETE** permission(s).\n\n","operationId":"deleteInterception","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteInterceptionRequest"}}},"required":true},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"204":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n"},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v1/hooks/interceptions/subscribe":{"post":{"tags":["Interception API"],"summary":"Subscribe for intercepting APIs","description":"Subscribe for intercepting APIs\n\n\n\nMultiple subscriptions with different endpoints is allowed for the same type and apiId.\nMultiple subscriptions with different endpoints of type ADAPT_ENTITY is allowed for the entityName.\nIf a subscription already exists, it will be overridden with the new executionOrder (if provided in the request).\nIf an interception is created or updated to have the same executionOrder as an existing interception (including existing ones with default executionOrder),\nIt will be set with that executionOrder and the existing interception's executionOrder will be incremented.\nIf that interception's new executionOrder clashes with another the other one will be incremented as well, and so forth.\n\nRequest Body Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|type|string|true| Values:PRE_REQUEST,POST_REQUEST,ADAPT_ENTITY||\n|apiId|string|true|Should only be provided if type=PRE_REQUEST or type=POST_REQUEST|POST/device/v1/devices|\n|entityName|string|true|Should only be provided if type=ADAPT_ENTITY|device|\n|endpoint|string|true||https://api.dev.biot-med.com/device-plugin/v1/devices/create-device-pre-interception|\n|executionOrder|integer|false|If not provided, the default value will be taken from the environment variable: EXECUTIONORDER_DEFAULT.\nSubscription with the same executionOrder cannot exist simultaneously.\nIf an interception is created or updated to have the same executionOrder as an existing interception (including existing ones with default executionOrder),\nIt will be set with that executionOrder and the existing interception's executionOrder will be incremented.\nIf that interception's new executionOrder clashes with another the other one will be incremented as well, and so forth.|1|\n\n\nThis API requires **HOOKS_INTERCEPTION_CREATE** permission(s).\n\n","operationId":"createInterception","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateInterceptionRequest"}}},"required":true},"responses":{"400":{"description":"Code : INVALID_API_ID, Details: [invalidApiId, validApiIds]\n\nCode : INVALID_ENTITY_TYPE_NAME, Details: [invalidEntityType, validEntityTypes]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"201":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|type|string| Values:PRE_REQUEST,POST_REQUEST,ADAPT_ENTITY||\n|apiId|string|Should only be provided if type=PRE_REQUEST or type=POST_REQUEST|POST/device/v1/devices|\n|entityName|string|Should only be provided if type=ADAPT_ENTITY|device|\n|endpoint|string||https://api.dev.biot-med.com/device-plugin/v1/devices/create-device-pre-interception|\n|id|string|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n|executionOrder|integer|||\n|creationTime|string|A UTC date-time in the ISO-8601 format|2007-12-20T10:15:30Z|\n|lastModifiedTime|string|A UTC date-time in the ISO-8601 format|2007-12-20T10:15:30Z|\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InterceptionResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v1/hooks/notifications":{"get":{"tags":["Subscription API"],"summary":"Search Subscription entities by filter","description":"Search Subscription entities by filter\n\nReturns list of Subscription, the response can be filtered, sorted and supports pagination\n\n\n## Filter\nEach additionalProp can filter one field, inside additionalProp there are many optional conditions that can be used for filtering that field\n\nWhen multiple conditions are specified, they are bundled together using logical AND operators, this means that only the items that match all filter conditions for that field will be returned\n\n***filter*** items possible values: [ *id*,*actionName*,*entityTypeName*,*endpoint* ] \n\n## Sort\nResults can be sorted by multiple fields, the order of the fields in the sort request governs the hierarchy of the sort\n\nThe first field is the primary sort, the second is used when two values of the first field are the same, and so forth\n\n***sort.order*** default value is DESC\n\n***sort.prop*** possible values:[ *actionName*,*entityTypeName* ]\n\nIf sort was not specified, the result will be sorted by: creationTime DESC\n\n## Free text search\nWhen freeTextSearch is passed, the free text search will be performed on every field except those of type Date\n\nIf used together with filters, freeTextSearch will be bundled to the filters with the logical AND operator, this means that only items that match all filters (and each filter's conditions) and the free text search will be returned\n\n## Page\n***limit*** max number of results that will be returned for each page. If not specify, the default will be 100\n\n***page*** page number starting from 0. If not specify, the default will be 0\n\n## Build URL\nEncode the JSON object and use the encoded string as the searchRequest parameter:\n\nhttps://&lt;URL&gt;?searchRequest=<ENCODED_JSON_STRING>\n\nQuery Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|searchRequest||false|Search request parameters: filter, sort and page||\n\n\nThis API requires **DISPATCHER_SUBSCRIPTIONS_SEARCH** permission(s).\n\n","operationId":"searchSubscriptions","parameters":[{"name":"searchRequest","in":"query","description":"Search request parameters: filter, sort and page","required":false,"content":{"*/*":{"schema":{"$ref":"#/components/schemas/SearchRequestV2"}}}}],"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|data|array|List of items that match the search request||\n|data[index]|array|List of items that match the search request||\n|data[index].entityTypeName|string| Values:device,organization,organization-user,caregiver,patient,usage-session,generic-entity,command,device-alert,patient-alert,registration-code||\n|data[index].actionName|string| Values:_create,_update,_delete,_list,_command,_generateCertificate,_activateCertificate,_revokeCertificate,_operate,_read,_start,_stop,_remoteStart,_remoteStop,_remoteResume,_remotePause,_updateAdmin,_updateEnabledState,_login,_logout,_clear,_manage,_assign,_saveMeasurement,_monitor,_view,_saveMeasurementBulk||\n|data[index].endpoint|string|||\n|data[index].id|string|||\n|metadata|object|||\n|metadata.sort|array|Sort that was passed in the request||\n|metadata.sort[index]|array|Sort that was passed in the request||\n|metadata.sort[index].prop|string|The property name for the sort||\n|metadata.sort[index].order|string|The direction of sort. Default DESC Values:ASC,DESC|ASC|\n|metadata.filter|object|The filter that was passed in the request||\n|metadata.page|object|||\n|metadata.page.totalResults|integer|The total number of items that match the query|145|\n|metadata.page.page|integer|Page number|3|\n|metadata.page.limit|integer|Number of items per page|100|\n|metadata.freeTextSearch|string|Free text search strings that was passed in the request|cat dog|\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchResponseSubscribeResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v1/hooks/interceptions":{"get":{"tags":["Interception API"],"summary":"Search for active interception subscriptions","description":"Search for active interception subscriptions\n\n\n\nQuery Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|searchRequest||false|Search request parameters: filter, sort and page||\n\n\nThis API requires **HOOKS_INTERCEPTION_SEARCH** permission(s).\n\n","operationId":"searchInterceptions","parameters":[{"name":"searchRequest","in":"query","description":"Search request parameters: filter, sort and page","required":false,"content":{"*/*":{"schema":{"$ref":"#/components/schemas/SearchRequestV2"}}}}],"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|data|array|List of items that match the search request||\n|data[index]|array|List of items that match the search request||\n|data[index].type|string| Values:PRE_REQUEST,POST_REQUEST,ADAPT_ENTITY||\n|data[index].apiId|string|Should only be provided if type=PRE_REQUEST or type=POST_REQUEST|POST/device/v1/devices|\n|data[index].entityName|string|Should only be provided if type=ADAPT_ENTITY|device|\n|data[index].endpoint|string||https://api.dev.biot-med.com/device-plugin/v1/devices/create-device-pre-interception|\n|data[index].id|string|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n|data[index].executionOrder|integer|||\n|data[index].creationTime|string|A UTC date-time in the ISO-8601 format|2007-12-20T10:15:30Z|\n|data[index].lastModifiedTime|string|A UTC date-time in the ISO-8601 format|2007-12-20T10:15:30Z|\n|metadata|object|||\n|metadata.sort|array|Sort that was passed in the request||\n|metadata.sort[index]|array|Sort that was passed in the request||\n|metadata.sort[index].prop|string|The property name for the sort||\n|metadata.sort[index].order|string|The direction of sort. Default DESC Values:ASC,DESC|ASC|\n|metadata.filter|object|The filter that was passed in the request||\n|metadata.page|object|||\n|metadata.page.totalResults|integer|The total number of items that match the query|145|\n|metadata.page.page|integer|Page number|3|\n|metadata.page.limit|integer|Number of items per page|100|\n|metadata.freeTextSearch|string|Free text search strings that was passed in the request|cat dog|\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchResponseInterceptionResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/system/healthCheck":{"get":{"tags":["Health Check API"],"summary":"Service Health check API","description":"Service Health check API\n\nThe API returns 200 if the service is up, used by the Load Balancer\n\nThis API is **public**.\n\n","operationId":"healthCheck","responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VersionResponse"}}}}}}}},"components":{"schemas":{"ErrorResponse":{"type":"object","properties":{"code":{"type":"string","example":"EXAMPLE_CODE_ENTITY_NOT_FOUND"},"message":{"type":"string","example":"Entity with id [00000000-0000-0000-0000-000000000000] not found"},"serviceName":{"type":"string","example":"Device Service"},"traceId":{"type":"string","example":"a07a7e532f3541d8"},"environment":{"type":"string","example":"develop"},"details":{"type":"object","additionalProperties":{"type":"object"}}}},"UnsubscribeRequest":{"required":["actionName","endpoint","entityTypeName"],"type":"object","properties":{"entityTypeName":{"type":"string","enum":["device","organization","organization-user","caregiver","patient","usage-session","generic-entity","command","device-alert","patient-alert","registration-code"]},"actionName":{"type":"string","enum":["_create","_update","_delete","_list","_command","_generateCertificate","_activateCertificate","_revokeCertificate","_operate","_read","_start","_stop","_remoteStart","_remoteStop","_remoteResume","_remotePause","_updateAdmin","_updateEnabledState","_login","_logout","_clear","_manage","_assign","_saveMeasurement","_monitor","_view","_saveMeasurementBulk"]},"endpoint":{"type":"string"}}},"SubscribeRequest":{"required":["actionName","endpoint","entityTypeName"],"type":"object","properties":{"entityTypeName":{"type":"string","enum":["device","organization","organization-user","caregiver","patient","usage-session","generic-entity","command","device-alert","patient-alert","registration-code"]},"actionName":{"type":"string","enum":["_create","_update","_delete","_list","_command","_generateCertificate","_activateCertificate","_revokeCertificate","_operate","_read","_start","_stop","_remoteStart","_remoteStop","_remoteResume","_remotePause","_updateAdmin","_updateEnabledState","_login","_logout","_clear","_manage","_assign","_saveMeasurement","_monitor","_view","_saveMeasurementBulk"]},"endpoint":{"type":"string"}}},"SubscribeResponse":{"required":["actionName","endpoint","entityTypeName"],"type":"object","properties":{"entityTypeName":{"type":"string","enum":["device","organization","organization-user","caregiver","patient","usage-session","generic-entity","command","device-alert","patient-alert","registration-code"]},"actionName":{"type":"string","enum":["_create","_update","_delete","_list","_command","_generateCertificate","_activateCertificate","_revokeCertificate","_operate","_read","_start","_stop","_remoteStart","_remoteStop","_remoteResume","_remotePause","_updateAdmin","_updateEnabledState","_login","_logout","_clear","_manage","_assign","_saveMeasurement","_monitor","_view","_saveMeasurementBulk"]},"endpoint":{"type":"string"},"id":{"type":"string","format":"uuid"}}},"DeleteInterceptionRequest":{"required":["apiId","endpoint","entityName","type"],"type":"object","properties":{"type":{"type":"string","enum":["PRE_REQUEST","POST_REQUEST","ADAPT_ENTITY"]},"apiId":{"type":"string","description":"Should only be provided if type=PRE_REQUEST or type=POST_REQUEST","example":"POST/device/v1/devices"},"entityName":{"type":"string","description":"Should only be provided if type=ADAPT_ENTITY","example":"device"},"endpoint":{"type":"string","example":"https://api.dev.biot-med.com/device-plugin/v1/devices/create-device-pre-interception"}}},"CreateInterceptionRequest":{"required":["apiId","endpoint","entityName","type"],"type":"object","properties":{"type":{"type":"string","enum":["PRE_REQUEST","POST_REQUEST","ADAPT_ENTITY"]},"apiId":{"type":"string","description":"Should only be provided if type=PRE_REQUEST or type=POST_REQUEST","example":"POST/device/v1/devices"},"entityName":{"type":"string","description":"Should only be provided if type=ADAPT_ENTITY","example":"device"},"endpoint":{"type":"string","example":"https://api.dev.biot-med.com/device-plugin/v1/devices/create-device-pre-interception"},"executionOrder":{"type":"integer","description":"If not provided, the default value will be taken from the environment variable: EXECUTIONORDER_DEFAULT.\nSubscription with the same executionOrder cannot exist simultaneously.\nIf an interception is created or updated to have the same executionOrder as an existing interception (including existing ones with default executionOrder),\nIt will be set with that executionOrder and the existing interception's executionOrder will be incremented.\nIf that interception's new executionOrder clashes with another the other one will be incremented as well, and so forth.","format":"int32","example":1}}},"InterceptionResponse":{"required":["apiId","creationTime","endpoint","entityName","executionOrder","id","lastModifiedTime","type"],"type":"object","properties":{"type":{"type":"string","enum":["PRE_REQUEST","POST_REQUEST","ADAPT_ENTITY"]},"apiId":{"type":"string","description":"Should only be provided if type=PRE_REQUEST or type=POST_REQUEST","example":"POST/device/v1/devices"},"entityName":{"type":"string","description":"Should only be provided if type=ADAPT_ENTITY","example":"device"},"endpoint":{"type":"string","example":"https://api.dev.biot-med.com/device-plugin/v1/devices/create-device-pre-interception"},"id":{"type":"string","description":"A UUID formatted string","format":"uuid","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},"executionOrder":{"type":"integer","format":"int32"},"creationTime":{"type":"string","description":"A UTC date-time in the ISO-8601 format","format":"date-time","example":"2007-12-20T10:15:30Z"},"lastModifiedTime":{"type":"string","description":"A UTC date-time in the ISO-8601 format","format":"date-time","example":"2007-12-20T10:15:30Z"}}},"FilterV2":{"type":"object","properties":{"in":{"type":"array","description":"List of values for the IN operator","items":{"type":"string","description":"List of values for the IN operator"}},"eq":{"type":"object","description":"Value for the EQUAL (=) operator, string, numeric, boolean or object","example":50},"lt":{"type":"number","description":"Value for the LESS THAN (<) operator, numeric value only","example":20},"lte":{"type":"number","description":"Value for the LESS THAN OR EQUAL operator (<=), numeric value only","example":25},"gt":{"type":"number","description":"Value for the GREATER THAN operator (>), numeric value only","example":25},"gte":{"type":"number","description":"Value for the GREATER THAN OR EQUAL operator (>=), numeric value only","example":25},"like":{"type":"string","description":"Value for the CONTAINS operator (substring), string value only","example":"John"},"from":{"type":"string","description":"Value for the DATE RANGE FROM operator, date value only,A UTC date in the ISO-8601 format","format":"date-time"},"to":{"type":"string","description":"Value for the DATE RANGE TO operator, date value only,A UTC date in the ISO-8601 format","format":"date-time"},"isNull":{"type":"boolean","description":"If set to true, checks if the field's value is null","example":true},"isNotNull":{"type":"boolean","description":"If set to true, checks if the field's value is not null","example":true},"not":{"type":"object","description":"Value for the NOT EQUAL (!=) operator, string, numeric, boolean or object","example":50},"notIn":{"type":"array","description":"List of values for the NOT IN operator","items":{"type":"string","description":"List of values for the NOT IN operator"}}},"description":"Each additionalProp can filter one field, inside additionalProp there are many optional conditions that can be used for filtering that field. When multiple conditions are specified, they are bundled together using logical AND operators, this means that only the items that match all filter conditions for that field will be returned"},"Order":{"required":["prop"],"type":"object","properties":{"prop":{"type":"string","description":"The property name for the sort"},"order":{"type":"string","description":"The direction of sort. Default DESC","example":"ASC","enum":["ASC","DESC"]}},"description":"Results can be sorted by multiple fields, the order of the fields in the sort request governs the hierarchy of the sort.The first field is the primary sort, the second is used when two values of the first field are the same, and so forth"},"SearchRequestV2":{"type":"object","properties":{"filter":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/FilterV2"},"description":"Each additionalProp can filter one field, inside additionalProp there are many optional conditions that can be used for filtering that field. When multiple conditions are specified, they are bundled together using logical AND operators, this means that only the items that match all filter conditions for that field will be returned"},"sort":{"type":"array","description":"Results can be sorted by multiple fields, the order of the fields in the sort request governs the hierarchy of the sort.The first field is the primary sort, the second is used when two values of the first field are the same, and so forth","items":{"$ref":"#/components/schemas/Order"}},"freeTextSearch":{"type":"string","description":"Free text search strings - will be bundled to the filters with the logical AND operator. Possible to pass a few strings with space between them, the search will return a result if one of strings appears in the data entity (OR operator).","example":"cat dog"},"limit":{"minimum":1,"type":"integer","format":"int32"},"page":{"minimum":0,"type":"integer","format":"int32"}}},"Metadata":{"type":"object","properties":{"sort":{"type":"array","description":"Sort that was passed in the request","items":{"$ref":"#/components/schemas/Order"}},"filter":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/FilterV2"},"description":"The filter that was passed in the request"},"page":{"$ref":"#/components/schemas/PageMetadata"},"freeTextSearch":{"type":"string","description":"Free text search strings that was passed in the request","example":"cat dog"}}},"PageMetadata":{"type":"object","properties":{"totalResults":{"type":"integer","description":"The total number of items that match the query","format":"int64","example":145},"page":{"type":"integer","description":"Page number","format":"int32","example":3},"limit":{"type":"integer","description":"Number of items per page","format":"int32","example":100}}},"SearchResponseSubscribeResponse":{"required":["data","metadata"],"type":"object","properties":{"data":{"type":"array","description":"List of items that match the search request","items":{"$ref":"#/components/schemas/SubscribeResponse"}},"metadata":{"$ref":"#/components/schemas/Metadata"}}},"SearchResponseInterceptionResponse":{"required":["data","metadata"],"type":"object","properties":{"data":{"type":"array","description":"List of items that match the search request","items":{"$ref":"#/components/schemas/InterceptionResponse"}},"metadata":{"$ref":"#/components/schemas/Metadata"}}},"VersionResponse":{"type":"object","properties":{"version":{"type":"string"},"springVersion":{"type":"string"},"traceId":{"type":"string"}}}},"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}}}}