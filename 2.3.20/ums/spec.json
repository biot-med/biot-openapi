{"openapi":"3.0.1","info":{"title":"BioT User Management Service","description":"APIs document (version: 7.8.25)","version":"7.8.25"},"servers":[{"url":"/ums"}],"paths":{"/v2/users/{id}/password/generate":{"post":{"tags":["User API"],"summary":"Generate a new password for a User","description":"Generate a new password for a User\n\n\n\nPath Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|id|string|true|User ID|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n\n\nThis API requires **UMS_USERS_GENERATE_USER_PASSWORD** permission(s).\n\n","operationId":"generateUserPassword","parameters":[{"name":"id","in":"path","description":"User ID","required":true,"schema":{"type":"string","format":"uuid"},"example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}],"responses":{"400":{"description":"Code : IDP_NOT_SUPPORTED_FOR_USER, Details: [idp]\n\nCode : CHANGE_PASSWORD_NOT_SUPPORTED_FOR_USER_WITHOUT_PASSWORD_TYPE, Details: [id]\n\nCode : PASSWORD_ALREADY_USED, Details: [passwordNumber]\n\nCode : INVALID_PASSWORD, Details: []\n\nCode : WEAK_PASSWORD, Details: [score, warningMessage, suggestions]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"201":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|userId|string|||\n|userPassword|string|||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenerateUserPasswordResponse"}}}},"500":{"description":"Code : FAILED_TO_ENCRYPT_PASSWORD, Details: []\n\nCode : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Code : USER_NOT_FOUND, Details: [id]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v2/users/token/refresh":{"post":{"tags":["Login API"],"summary":"Refresh JWT token","description":"Refresh JWT token\n\n\n\nCreate new access token with refresh token in request\n\nRequest Body Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|refreshToken|string|true|||\n\n\nThis API is **public**.\n\n","operationId":"refreshToken","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefreshTokenRequest"}}},"required":true},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|userId|string|||\n|ownerOrganizationId|string|||\n|accessJwt|object|||\n|accessJwt.token|string|||\n|accessJwt.expiration|string|||\n|refreshJwt|object|||\n|refreshJwt.token|string|||\n|refreshJwt.expiration|string|||\n|mfaRequired|boolean|||\n|mfaExpiration|string|||\n|passwordResetRequired|boolean|||\n|phone|string|||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : LOGIN_FAILED, Details: []\n\nCode : REFRESH_TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}}},"/v2/users/token/login":{"post":{"tags":["Login API"],"summary":"Login with refresh token","description":"Login with refresh token\n\n\n\nCreates a new pair of access and refresh tokens.\n\nUsed in 'remember my password' flow\n\nRequest Body Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|refreshToken|string|true|||\n\n\nThis API is **public**.\n\n","operationId":"tokenLogin","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginWithTokenRequest"}}},"required":true},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|userId|string|||\n|ownerOrganizationId|string|||\n|accessJwt|object|||\n|accessJwt.token|string|||\n|accessJwt.expiration|string|||\n|refreshJwt|object|||\n|refreshJwt.token|string|||\n|refreshJwt.expiration|string|||\n|mfaRequired|boolean|||\n|mfaExpiration|string|||\n|passwordResetRequired|boolean|||\n|phone|string|||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : LOGIN_FAILED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}}},"/v2/users/self":{"get":{"tags":["Self User API"],"summary":"Self get user","description":"Self get user\n\nUser ID is taken from the JWT token\n\nThis API requires **UMS_USERS_SELF_GET_USER** permission(s).\n\n","operationId":"selfGetUser","responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"SUCCESS","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}}},"security":[{"bearerAuth":[]}]},"post":{"tags":["Self User API"],"summary":"Self registration of User","description":"Self registration of User\n\npassword is mandatory only for ***PASSWORD*** credentialType\n\nThis API is **public**.\n\n","operationId":"selfRegisterUser","parameters":[{"name":"Owner-Organization-Id","in":"header","required":false,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SelfRegisterUserRequest"}}},"required":true},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"201":{"description":"CREATED","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}}}},"delete":{"tags":["Self User API"],"summary":"Self delete user","description":"Self delete user\n\nUser ID is taken from the JWT token\n\nThis API requires **UMS_USERS_SELF_DELETE_USER** permission(s).\n\n","operationId":"selfDeleteUser","responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"204":{"description":"NO_CONTENT"}},"security":[{"bearerAuth":[]}]},"patch":{"tags":["Self User API"],"summary":"Self update user","description":"Self update user\n\nUser ID is taken from the JWT token\n\nThis API requires **UMS_USERS_SELF_UPDATE_USER** permission(s).\n\n","operationId":"selfUpdateUser","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SelfUpdateUserRequest"}}},"required":true},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"SUCCESS","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v2/users/self/password/forgot":{"post":{"tags":["Self User API"],"summary":"Forgot password API, if the username exists - reset password message will be sent to mail","description":"Forgot password API, if the username exists - reset password message will be sent to mail\n\n\n\nThis API is **public**.\n\n","operationId":"forgotPassword","parameters":[{"name":"forgot-password-landing-page","in":"header","description":"Landing page that will be sent in confirmation mail","required":true,"schema":{"type":"string"},"example":"https://example.com/en/forgot-password/landing-page"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForgotPasswordRequestV2"}}},"required":true},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"SUCCESS"}}}},"/v2/users/logout":{"post":{"tags":["Login API"],"summary":"Logout","description":"Logout\n\nLogout by providing refresh token\n\nThis API is **public**.\n\n","operationId":"logout","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LogoutRequest"}}},"required":true},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"SUCCESS"}}}},"/v2/users/login":{"post":{"tags":["Login API"],"summary":"Login with credentials","description":"Login with credentials\n\n\n\nLogin with username and password.\n* For ***PASSWORD*** credential type you must specify username and password\n\nRequest Body Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|username|string|true|||\n|password|string|false|||\n\n\nThis API is **public**.\n\n","operationId":"login","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginRequestV2"}}},"required":true},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|userId|string|||\n|ownerOrganizationId|string|||\n|accessJwt|object|||\n|accessJwt.token|string|||\n|accessJwt.expiration|string|||\n|refreshJwt|object|||\n|refreshJwt.token|string|||\n|refreshJwt.expiration|string|||\n|mfaRequired|boolean|||\n|mfaExpiration|string|||\n|passwordResetRequired|boolean|||\n|phone|string|||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginResponse"}}}},"401":{"description":"Code : USER_LOCKED, Details: []\n\nCode : USER_LOCKED_WITH_TIME, Details: [timeLeftInMinutes]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : LOGIN_FAILED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}}},"/v2/users/login/mfa":{"post":{"tags":["MFA Login API"],"summary":"MFA login","description":"MFA login\n\nLogin by verification code sent by SMS. In case a password reset is required (i.e. passwordResetRequired=true), the refreshJwt field will be null\n\nThis API requires **UMS_MFA_LOGIN** permission(s).\n\n","operationId":"mfaLogin","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MfaLoginRequestV2"}}},"required":true},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"SUCCESS","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v2/users/login/mfa/resend":{"post":{"tags":["MFA Login API"],"summary":"Resend SMS for MFA verification","description":"Resend SMS for MFA verification\n\nUsed to send the second-factor authentication by SMS containing the verification code\n\nThis API requires **UMS_RESEND_MFA_SMS** permission(s).\n\n","operationId":"mfaResend","responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"SUCCESS","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResendMfaResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v2/users/credentials/validate":{"post":{"tags":["User API"],"summary":"Validate user credentials","description":"Validate user credentials\n\n\n\nThis API can be used in order to validate the username and password are in a correct format before calling the create user API.\nIf the credentials are valid the success field will be true.\nThe API also returns the password strength.\nThe minimum score is determined by an environment variable.\n\n\nRequest Body Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|username|string|true|user's username. If the credential type is OTP, should be a valid phone (An E.164 formatted phone number e.g +12345678901)||\n|password|string|true|||\n|credentialType|string|false| Values:PASSWORD||\n\n\nThis API is **public**.\n\n","operationId":"validateUserCredentials","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateUserCredentialsRequest"}}},"required":true},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|success|boolean|||\n|message|string|||\n|code|string|||\n|passwordStrength|object|||\n|passwordStrength.score|integer|The score of the password. minimum score of 0 and maximum score of 4. Higher number means stronger password||\n|passwordStrength.suggestions|string|A possibly-empty list of suggestions to help choose a less guessable password. eg. 'Add another word or two'||\n|passwordStrength.warningMessage|string|Explains what's wrong, eg. 'this is a top-10 common password'. not always set -- sometimes an empty string||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateUserCredentialsResponse"}}}},"201":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|success|boolean|||\n|message|string|||\n|code|string|||\n|passwordStrength|object|||\n|passwordStrength.score|integer|The score of the password. minimum score of 0 and maximum score of 4. Higher number means stronger password||\n|passwordStrength.suggestions|string|A possibly-empty list of suggestions to help choose a less guessable password. eg. 'Add another word or two'||\n|passwordStrength.warningMessage|string|Explains what's wrong, eg. 'this is a top-10 common password'. not always set -- sometimes an empty string||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateUserCredentialsResponse"}}}}}}},"/v2/services":{"get":{"tags":["Service User API"],"summary":"Search Service User entities by filter","description":"Search Service User entities by filter\n\nReturns list of Service User, the response can be filtered, sorted and supports pagination\n\n\n**For more information and examples on creating search requests, click <a href=\"https://docs.biot-med.com/docs/using-biot-search-apis\" target=\"_blank\">here.</a>**\n## Filter\nEach additionalProp can filter one field, inside additionalProp there are many optional conditions that can be used for filtering that field\n\nBy using the logical additionalProps $AND, $OR, $NOT, you can add complex nested logic filters. When sending these props, you must send only the nested filter field inside the filter value. This will allow you to group additional filters using logical AND/OR/NOT operators. When not sending a logic prop (including when not sending a nested logic prop), the props are bundled together using logical AND operators, this means that only the items that match all filter conditions for that field will be returned.\n\n***filter*** items possible values: [ *id*,*active*,*type*,*ownerOrganizationId*,*name*,*accessTokenExpirationInMinutes* ] \n\n## Sort\nResults can be sorted by multiple fields, the order of the fields in the sort request governs the hierarchy of the sort\n\nThe first field is the primary sort, the second is used when two values of the first field are the same, and so forth\n\n***sort.order*** default value is DESC\n\n***sort.prop*** possible values:[ *id*,*active*,*type*,*ownerOrganizationId*,*name*,*accessTokenExpirationInMinutes* ]\n\nIf sort was not specified, the result will be sorted by: creationTime DESC\n\n## Free text search\nWhen freeTextSearch is passed, the free text search will be performed on every field except those of type Date\n\nIf used together with filters, freeTextSearch will be bundled to the filters with the logical AND operator, this means that only items that match all filters (and each filter's conditions) and the free text search will be returned\n\n## Page\n***limit*** max number of results that will be returned for each page. If not specify, the default will be 100\n\n***page*** page number starting from 0. If not specify, the default will be 0\n\n## Build URL\nEncode the JSON object and use the encoded string as the searchRequest parameter:\n\nhttps://&lt;URL&gt;?searchRequest=<ENCODED_JSON_STRING>\n\nQuery Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|searchRequest||false|Search request parameters: filter, sort and page||\n\n\nThis API requires **UMS_USERS_SEARCH_SERVICE_USERS** permission(s).\n\n","operationId":"searchServiceUsers","parameters":[{"name":"searchRequest","in":"query","description":"Search request parameters: filter, sort and page","required":false,"content":{"*/*":{"schema":{"$ref":"#/components/schemas/SearchRequestV2"}}}}],"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|data|array|List of items that match the search request||\n|data[index]|array|List of items that match the search request||\n|data[index].active|boolean|||\n|data[index].roleId|string|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n|data[index].type|string| Values:INTERNAL_SERVICE,EXTERNAL_SERVICE||\n|data[index].ownerOrganizationId|string|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n|data[index].name|string|||\n|data[index].accessTokenExpirationInMinutes|integer|||\n|data[index].id|string|||\n|data[index].secretKeys|array|||\n|data[index].secretKeys[index]|array|||\n|data[index].secretKeys[index].id|string|||\n|data[index].secretKeys[index].creationTime|string|||\n|metadata|object|||\n|metadata.sort|array|Sort that was passed in the request||\n|metadata.sort[index]|array|Sort that was passed in the request||\n|metadata.sort[index].prop|string|The property name for the sort||\n|metadata.sort[index].order|string|The direction of sort. Default DESC Values:ASC,DESC|ASC|\n|metadata.filter|object|The filter that was passed in the request||\n|metadata.page|object|||\n|metadata.page.totalResults|integer|The total number of items that match the query|145|\n|metadata.page.page|integer|Page number|3|\n|metadata.page.limit|integer|Number of items per page|100|\n|metadata.freeTextSearch|string|Free text search strings that was passed in the request|cat dog|\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchResponseGetServiceUserV2Response"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]},"post":{"tags":["Service User API"],"summary":"Create a new Service User","description":"Create a new Service User\n\n\n\nRequest Body Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|active|boolean|false|||\n|roleId|string|true|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n|type|string|true| Values:INTERNAL_SERVICE,EXTERNAL_SERVICE||\n|ownerOrganizationId|string|false|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n|name|string|false|||\n|accessTokenExpirationInMinutes|integer|false|||\n\n\nThis API requires **UMS_SERVICES_CREATE_SERVICE_USER** permission(s).\n\n","operationId":"createServiceUser","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateServiceUserRequest"}}},"required":true},"responses":{"400":{"description":"Code : SERVICE_TYPE_NOT_ALLOWED, Details: [attributeName, value]\n\nCode : MISSING_PARAMETERS, Details: [parameters]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"201":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateServiceUserResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Code : OWNER_ORGANIZATION_NOT_FOUND, Details: [id]\n\nCode : PERMISSIONS_NOT_FOUND, Details: [ids]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"409":{"description":"Code : SERVICE_NAME_ALREADY_EXISTS, Details: [name]\n\nCode : ROLE_ALREADY_EXISTS, Details: [name]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v2/services/{id}/secret-keys":{"post":{"tags":["Service User API"],"summary":"Create a new Service User","description":"Create a new Service User\n\n\n\nPath Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|id|string|true|Service User ID|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n\n\nThis API requires **UMS_USERS_CREATE_SECRET_KEY_BY_SERVICE_USER_ID** permission(s).\n\n","operationId":"createSecretKey","parameters":[{"name":"id","in":"path","description":"Service User ID","required":true,"schema":{"type":"string","format":"uuid"},"example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}],"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"201":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|id|string|||\n|creationTime|string|||\n|secretKey|string|||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateSecretKeyResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Code : SERVICE_USER_NOT_FOUND, Details: [id]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"409":{"description":"Code : MAX_SECRET_KEYS, Details: [serviceId, maxSecretKeys]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v2/services/accessToken":{"post":{"tags":["Service User API"],"summary":"Service User Login","description":"Service User Login\n\n\n\nRequest Body Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|id|string|true|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n|secretKey|string|true|||\n\n\nThis API is **public**.\n\n","operationId":"serviceUserLogin","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServiceUserAccessTokenRequest"}}},"required":true},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|accessToken|string|||\n|accessTokenExpiration|string|||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServiceUserAccessTokenResponse"}}}},"401":{"description":"Code : SERVICE_LOCKED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : LOGIN_FAILED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}}},"/v1/tokens/{token}":{"get":{"tags":["Temporary Token Operation API"],"summary":"Validation token operation","description":"Validation token operation\n\nValidate that token, operation and entity ID are valid and not expired.\n\nThis API is **public**.\n\n","operationId":"validateTokenOperation","parameters":[{"name":"token","in":"path","description":"Temporary token for calling this API","required":true,"schema":{"type":"string"},"example":"UEM8EM8axpogWy"},{"name":"operation","in":"query","description":"Operation name","required":true,"schema":{"type":"string"},"example":"my-operation"},{"name":"entityId","in":"query","description":"The entity id of the operation","required":true,"schema":{"type":"string"},"example":"id"}],"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"SUCCESS"},"401":{"description":"TOKEN_NOT_VALID"}}},"post":{"tags":["Temporary Token Operation API"],"summary":"Execute token operation","description":"Execute token operation\n\nExecute operation by specifying a temp token instead of jwt token\n\nThis API is **public**.\n\n","operationId":"executeTokenOperation","parameters":[{"name":"token","in":"path","description":"Temporary token for calling this API","required":true,"schema":{"type":"string"},"example":"UEM8EM8axpogWy"},{"name":"operation","in":"query","description":"Operation name","required":true,"schema":{"type":"string"},"example":"my-operation"},{"name":"entityId","in":"query","description":"The entity id of the operation","required":true,"schema":{"type":"string"},"example":"id"}],"requestBody":{"content":{"application/json":{"schema":{"type":"string"}}},"required":true},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"303":{"description":"SEE_OTHER","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenOperationResponse"}}}},"200":{"description":"SUCCESS","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenOperationResponse"}}}},"401":{"description":"TOKEN_NOT_VALID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenOperationResponse"}}}}}}},"/v2/users/{id}":{"get":{"tags":["User API"],"summary":"Get User by ID","description":"Get User by ID\n\n\n\nPath Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|id|string|true|User ID that needs to be fetched|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n\n\nThis API requires **UMS_USERS_GET_USER** permission(s).\n\n","operationId":"getUser","parameters":[{"name":"id","in":"path","description":"User ID that needs to be fetched","required":true,"schema":{"type":"string","format":"uuid"},"example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}],"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|username|string|user's username. If the credential type is OTP, should be a valid phone (An E.164 formatted phone number e.g +12345678901)||\n|id|string|||\n|ownerOrganizationId|string|||\n|groups|array|||\n|groups[index]|array|||\n|groups[index].id|string|||\n|groups[index].name|string|||\n|locked|boolean|||\n|active|boolean|||\n|mfa|object|||\n|mfa.enabled|boolean|||\n|mfa.phone|string|An E.164 formatted phone number|+12345678901|\n|mfa.expirationInMinutes|integer|||\n|loginTimestamp|string|||\n|credentialType|string| Values:PASSWORD||\n|userIdPs|array|||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Code : USER_NOT_FOUND, Details: [id]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]},"delete":{"tags":["User API"],"summary":"Delete User","description":"Delete User\n\n\n\nPath Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|id|string|true|User ID that needs to be deleted|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n\n\nThis API requires **UMS_USERS_DELETE_USER** permission(s).\n\n","operationId":"delete","parameters":[{"name":"id","in":"path","description":"User ID that needs to be deleted","required":true,"schema":{"type":"string","format":"uuid"},"example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}],"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"204":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n"},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Code : USER_NOT_FOUND, Details: [id]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]},"patch":{"tags":["User API"],"summary":"Update User","description":"Update User\n\nPerforms partial update, if a field is specified in the request it will be updated\n\n(*)This parameter is mandatory only if its optional parent attribute is defined. Click <a href=\"https://docs.biot-med.com/docs/biot-rest-api#api-optional-parameters\" target=\"_blank\">here</a> for more information.\n\nRequest Body Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|username|string|false|user's username. If the credential type is OTP, should be a valid phone (An E.164 formatted phone number e.g +12345678901)||\n|locked|boolean|false|||\n|active|boolean|false|||\n|groupIds|array|false|||\n|idPs|array|false|||\n|mfa|object|false|||\n|mfa.enabled|boolean|true(*)|||\n|mfa.phone|string|true(*)|An E.164 formatted phone number|+12345678901|\n|mfa.expirationInMinutes|integer|false|||\nPath Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|id|string|true|User ID that needs to be updated|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n\n\nThis API requires **UMS_USERS_UPDATE_USER** permission(s).\n\n","operationId":"updateUser","parameters":[{"name":"id","in":"path","description":"User ID that needs to be updated","required":true,"schema":{"type":"string","format":"uuid"},"example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateUserRequest"}}},"required":true},"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|username|string|user's username. If the credential type is OTP, should be a valid phone (An E.164 formatted phone number e.g +12345678901)||\n|id|string|||\n|ownerOrganizationId|string|||\n|groups|array|||\n|groups[index]|array|||\n|groups[index].id|string|||\n|groups[index].name|string|||\n|locked|boolean|||\n|active|boolean|||\n|mfa|object|||\n|mfa.enabled|boolean|||\n|mfa.phone|string|An E.164 formatted phone number|+12345678901|\n|mfa.expirationInMinutes|integer|||\n|loginTimestamp|string|||\n|credentialType|string| Values:PASSWORD||\n|userIdPs|array|||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Code : USER_NOT_FOUND, Details: [id]\n\nCode : GROUPS_NOT_FOUND, Details: [ids]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"409":{"description":"Code : USERNAME_ALREADY_EXISTS, Details: [username]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v2/services/{id}":{"get":{"tags":["Service User API"],"summary":"Get Service User by ID","description":"Get Service User by ID\n\n\n\nPath Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|id|string|true|Service User ID that needs to be fetched|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n\n\nThis API requires **UMS_USERS_GET_SERVICE_USER_BY_ID** permission(s).\n\n","operationId":"getServiceUserById","parameters":[{"name":"id","in":"path","description":"Service User ID that needs to be fetched","required":true,"schema":{"type":"string","format":"uuid"},"example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}],"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|active|boolean|||\n|roleId|string|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n|type|string| Values:INTERNAL_SERVICE,EXTERNAL_SERVICE||\n|ownerOrganizationId|string|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n|name|string|||\n|accessTokenExpirationInMinutes|integer|||\n|id|string|||\n|secretKeys|array|||\n|secretKeys[index]|array|||\n|secretKeys[index].id|string|||\n|secretKeys[index].creationTime|string|||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetServiceUserV2Response"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Code : SERVICE_USER_NOT_FOUND, Details: [id]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]},"delete":{"tags":["Service User API"],"summary":"Delete Service User","description":"Delete Service User\n\n\n\nPath Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|id|string|true|Service User ID that needs to be deleted|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n\n\nThis API requires **UMS_SERVICES_DELETE_SERVICE_USER** permission(s).\n\n","operationId":"deleteServiceUser","parameters":[{"name":"id","in":"path","description":"Service User ID that needs to be deleted","required":true,"schema":{"type":"string","format":"uuid"},"example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}],"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"204":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n"},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Code : SERVICE_USER_NOT_FOUND, Details: [id]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]},"patch":{"tags":["Service User API"],"summary":"Update Service User","description":"Update Service User\n\nPerforms partial update, if a field is specified in the request it will be updated\n\nRequest Body Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|active|boolean|false|||\n|roleId|string|false|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6|\nPath Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|id|string|true|Service User ID that needs to be updated|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n\n\nThis API requires **UMS_SERVICES_UPDATE_SERVICE_USER** permission(s).\n\n","operationId":"updateServiceUser","parameters":[{"name":"id","in":"path","description":"Service User ID that needs to be updated","required":true,"schema":{"type":"string","format":"uuid"},"example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateServiceUserV2Request"}}},"required":true},"responses":{"400":{"description":"Code : SERVICE_TYPE_NOT_ALLOWED, Details: [attributeName, value]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|active|boolean|||\n|roleId|string|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n|type|string| Values:INTERNAL_SERVICE,EXTERNAL_SERVICE||\n|ownerOrganizationId|string|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n|name|string|||\n|accessTokenExpirationInMinutes|integer|||\n|id|string|||\n|secretKeys|array|||\n|secretKeys[index]|array|||\n|secretKeys[index].id|string|||\n|secretKeys[index].creationTime|string|||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateServiceUserV2Response"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Code : SERVICE_USER_NOT_FOUND, Details: [id]\n\nCode : ROLE_NOT_FOUND_IN_SUPPORTED_TYPES, Details: [id, types]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v2/users":{"get":{"tags":["User API"],"summary":"Search User entities by filter","description":"Search User entities by filter\n\nReturns list of User, the response can be filtered, sorted and supports pagination\n\n\n**For more information and examples on creating search requests, click <a href=\"https://docs.biot-med.com/docs/using-biot-search-apis\" target=\"_blank\">here.</a>**\n## Filter\nEach additionalProp can filter one field, inside additionalProp there are many optional conditions that can be used for filtering that field\n\nBy using the logical additionalProps $AND, $OR, $NOT, you can add complex nested logic filters. When sending these props, you must send only the nested filter field inside the filter value. This will allow you to group additional filters using logical AND/OR/NOT operators. When not sending a logic prop (including when not sending a nested logic prop), the props are bundled together using logical AND operators, this means that only the items that match all filter conditions for that field will be returned.\n\n***filter*** items possible values: [ *id*,*username*,*active*,*locked* ] \n\n## Sort\nResults can be sorted by multiple fields, the order of the fields in the sort request governs the hierarchy of the sort\n\nThe first field is the primary sort, the second is used when two values of the first field are the same, and so forth\n\n***sort.order*** default value is DESC\n\n***sort.prop*** possible values:[ *id*,*username*,*active*,*locked*,*creationTime* ]\n\nIf sort was not specified, the result will be sorted by: creationTime DESC\n\n## Free text search\nWhen freeTextSearch is passed, the free text search will be performed on every field except those of type Date\n\nIf used together with filters, freeTextSearch will be bundled to the filters with the logical AND operator, this means that only items that match all filters (and each filter's conditions) and the free text search will be returned\n\n## Page\n***limit*** max number of results that will be returned for each page. If not specify, the default will be 100\n\n***page*** page number starting from 0. If not specify, the default will be 0\n\n## Build URL\nEncode the JSON object and use the encoded string as the searchRequest parameter:\n\nhttps://&lt;URL&gt;?searchRequest=<ENCODED_JSON_STRING>\n\nQuery Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|searchRequest||false|Search request parameters: filter, sort and page||\n\n\nThis API requires **UMS_USERS_SEARCH_USER** permission(s).\n\n","operationId":"search","parameters":[{"name":"searchRequest","in":"query","description":"Search request parameters: filter, sort and page","required":false,"content":{"*/*":{"schema":{"$ref":"#/components/schemas/SearchRequestV2"}}}}],"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|data|array|List of items that match the search request||\n|data[index]|array|List of items that match the search request||\n|data[index].username|string|user's username. If the credential type is OTP, should be a valid phone (An E.164 formatted phone number e.g +12345678901)||\n|data[index].id|string|||\n|data[index].ownerOrganizationId|string|||\n|data[index].groups|array|||\n|data[index].groups[index]|array|||\n|data[index].groups[index].id|string|||\n|data[index].groups[index].name|string|||\n|data[index].locked|boolean|||\n|data[index].active|boolean|||\n|data[index].mfa|object|||\n|data[index].mfa.enabled|boolean|||\n|data[index].mfa.phone|string|An E.164 formatted phone number|+12345678901|\n|data[index].mfa.expirationInMinutes|integer|||\n|data[index].loginTimestamp|string|||\n|data[index].credentialType|string| Values:PASSWORD||\n|data[index].userIdPs|array|||\n|metadata|object|||\n|metadata.sort|array|Sort that was passed in the request||\n|metadata.sort[index]|array|Sort that was passed in the request||\n|metadata.sort[index].prop|string|The property name for the sort||\n|metadata.sort[index].order|string|The direction of sort. Default DESC Values:ASC,DESC|ASC|\n|metadata.filter|object|The filter that was passed in the request||\n|metadata.page|object|||\n|metadata.page.totalResults|integer|The total number of items that match the query|145|\n|metadata.page.page|integer|Page number|3|\n|metadata.page.limit|integer|Number of items per page|100|\n|metadata.freeTextSearch|string|Free text search strings that was passed in the request|cat dog|\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchResponseUserResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v1/tokens/{token}/execute":{"get":{"tags":["Temporary Token Operation API"],"summary":"Execute token operation","description":"Execute token operation\n\nExecute operation by specifying a temp token instead of jwt token\n\nThis API is **public**.\n\n","operationId":"executeTokenOperationGet","parameters":[{"name":"token","in":"path","description":"Temporary token for calling this API","required":true,"schema":{"type":"string"},"example":"UEM8EM8axpogWy"},{"name":"operation","in":"query","description":"Operation name","required":true,"schema":{"type":"string"},"example":"my-operation"},{"name":"entityId","in":"query","description":"The entity id of the operation","required":true,"schema":{"type":"string"},"example":"id"},{"name":"operationData","in":"query","required":true,"schema":{"type":"object","additionalProperties":{"type":"object"}}}],"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"303":{"description":"SEE_OTHER","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenOperationResponse"}}}},"200":{"description":"SUCCESS","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenOperationResponse"}}}},"401":{"description":"TOKEN_NOT_VALID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenOperationResponse"}}}}}}},"/v1/temp-credentials/organization":{"get":{"tags":["Temporary Credentials API"],"summary":"Get MQTT temporary credentials for receiving notification for all entities in an organization.","description":"Get MQTT temporary credentials for receiving notification for all entities in an organization.\n\nAlso returns a single topic formatted '[ownerOrganizationId]/+/+'.\n[ownerOrganizationId] will be filled from the access token and should not be changed.\nThe first [+] represents entityType and can be changed to any entityType. this topic will include only messages from that entity type. [+] can be used to listen to all entity types.\nThe second [+] represents entityId and can be changed to any entityId in the organization, this topic will include only messages from that entity. [+] can be used to listen to all entities.\nE.g. The topic for an organization with id [64a454f0-352f-4373-a39f-5bded3cf58e9] and entity with type device listening to all notification will be '64a454f0-352f-4373-a39f-5bded3cf58e9/device/+'.\n\nThis API requires **PROTECTED_API** permission(s).\n\n","operationId":"getTempCredentialsForOrganization","responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"SUCCESS","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TemporaryMqttCredentialsResponse"}}}}},"security":[{"bearerAuth":[]}]}},"/v1/security/public-key":{"get":{"tags":["Security API"],"summary":"Get public key","description":"Get public key\n\n\n\n\n\nThis API is **public**.\n\n","operationId":"getPublicKey","responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n|publicKey|string|||\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetPublicKeyResponse"}}}},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}}},"/system/healthCheck":{"get":{"tags":["Health Check API"],"summary":"Service Health check API","description":"Service Health check API\n\nThe API returns 200 if the service is up, used by the Load Balancer\n\nThis API is **public**.\n\n","operationId":"healthCheck","responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VersionResponse"}}}}}}},"/v2/services/{id}/secret-keys/{secretKeyId}":{"delete":{"tags":["Service User API"],"summary":"Delete secret key of a service user by service user id and secret key id","description":"Delete secret key of a service user by service user id and secret key id\n\n\n\nPath Parameters:\n\n| Parameter   |Type   | Mandatory| Description          | Example   |\n|-------------|-------|----------|----------------------|-----------|\n|id|string|true|Service User ID|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n|secretKeyId|string|true|Secret Key ID|3fa85f64-5717-4562-b3fc-2c963f66afa6|\n\n\nThis API requires **UMS_USERS_DELETE_SECRET_KEY_BY_ID** permission(s).\n\n","operationId":"deleteSecretKey","parameters":[{"name":"id","in":"path","description":"Service User ID","required":true,"schema":{"type":"string","format":"uuid"},"example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},{"name":"secretKeyId","in":"path","description":"Secret Key ID","required":true,"schema":{"type":"string","format":"uuid"},"example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}],"responses":{"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"204":{"description":"The below table describes the response parameters:\n\n| Parameter   |Type   |Description          | Example   |\n|-------------|-------|---------------------|-----------|\n"},"500":{"description":"Code : INTERNAL_SERVER_ERROR, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Code : TOKEN_NOT_VALID, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"Code : ACCESS_DENIED, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Code : SERVICE_USER_NOT_FOUND, Details: [id]\n\nCode : SECRET_KEY_ID_NOT_FOUND, Details: [secretKeyId, serviceUserId]","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"504":{"description":"Code : GATEWAY_TIMEOUT, Details: []","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"bearerAuth":[]}]}}},"components":{"schemas":{"ErrorResponse":{"type":"object","properties":{"code":{"type":"string","example":"EXAMPLE_CODE_ENTITY_NOT_FOUND"},"message":{"type":"string","example":"Entity with id [00000000-0000-0000-0000-000000000000] not found"},"serviceName":{"type":"string","example":"Device Service"},"traceId":{"type":"string","example":"a07a7e532f3541d8"},"environment":{"type":"string","example":"develop"},"details":{"type":"object","additionalProperties":{"type":"object"}}}},"GenerateUserPasswordResponse":{"type":"object","properties":{"userId":{"type":"string","format":"uuid"},"userPassword":{"type":"string"}}},"RefreshTokenRequest":{"required":["refreshToken"],"type":"object","properties":{"refreshToken":{"type":"string"}}},"JwtToken":{"type":"object","properties":{"token":{"type":"string"},"expiration":{"type":"string","format":"date-time"}}},"LoginResponse":{"type":"object","properties":{"userId":{"type":"string","format":"uuid"},"ownerOrganizationId":{"type":"string","format":"uuid"},"accessJwt":{"$ref":"#/components/schemas/JwtToken"},"refreshJwt":{"$ref":"#/components/schemas/JwtToken"},"mfaRequired":{"type":"boolean"},"mfaExpiration":{"type":"string","format":"date-time"},"passwordResetRequired":{"type":"boolean"},"phone":{"type":"string"}}},"LoginWithTokenRequest":{"required":["refreshToken"],"type":"object","properties":{"refreshToken":{"type":"string"}}},"SelfRegisterUserRequest":{"required":["password","username"],"type":"object","properties":{"username":{"maxLength":128,"minLength":5,"type":"string","description":"user's username. If the credential type is OTP, should be a valid phone (An E.164 formatted phone number e.g +12345678901)"},"password":{"type":"string"},"credentialType":{"type":"string","enum":["PASSWORD"]},"idPs":{"uniqueItems":true,"type":"array","items":{"type":"string","enum":["UMS","ADFS"]}}}},"GroupObject":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"name":{"type":"string"}}},"Mfa":{"required":["enabled","phone"],"type":"object","properties":{"enabled":{"type":"boolean"},"phone":{"type":"string","description":"An E.164 formatted phone number","example":"+12345678901"},"expirationInMinutes":{"maximum":1440,"minimum":1,"type":"integer","format":"int32"}}},"UserResponse":{"required":["username"],"type":"object","properties":{"username":{"maxLength":128,"minLength":5,"type":"string","description":"user's username. If the credential type is OTP, should be a valid phone (An E.164 formatted phone number e.g +12345678901)"},"id":{"type":"string","format":"uuid"},"ownerOrganizationId":{"type":"string","format":"uuid"},"groups":{"uniqueItems":true,"type":"array","items":{"$ref":"#/components/schemas/GroupObject"}},"locked":{"type":"boolean"},"active":{"type":"boolean"},"mfa":{"$ref":"#/components/schemas/Mfa"},"loginTimestamp":{"type":"string","format":"date-time"},"credentialType":{"type":"string","enum":["PASSWORD"]},"userIdPs":{"uniqueItems":true,"type":"array","items":{"type":"string","enum":["UMS","ADFS"]}}}},"ForgotPasswordRequestV2":{"required":["username"],"type":"object","properties":{"username":{"type":"string"}}},"LogoutRequest":{"required":["refreshToken"],"type":"object","properties":{"refreshToken":{"type":"string"}}},"LoginRequestV2":{"required":["username"],"type":"object","properties":{"username":{"type":"string"},"password":{"type":"string"}}},"MfaLoginRequestV2":{"type":"object","properties":{"code":{"type":"string"}}},"ResendMfaResponse":{"type":"object","properties":{"mfaExpiration":{"type":"string","format":"date-time"}}},"ValidateUserCredentialsRequest":{"required":["password","username"],"type":"object","properties":{"username":{"maxLength":128,"minLength":5,"type":"string","description":"user's username. If the credential type is OTP, should be a valid phone (An E.164 formatted phone number e.g +12345678901)"},"password":{"type":"string"},"credentialType":{"type":"string","enum":["PASSWORD"]}}},"PasswordStrengthResponse":{"type":"object","properties":{"score":{"type":"integer","description":"The score of the password. minimum score of 0 and maximum score of 4. Higher number means stronger password","format":"int32"},"suggestions":{"type":"string","description":"A possibly-empty list of suggestions to help choose a less guessable password. eg. 'Add another word or two'"},"warningMessage":{"type":"string","description":"Explains what's wrong, eg. 'this is a top-10 common password'. not always set -- sometimes an empty string"}}},"ValidateUserCredentialsResponse":{"type":"object","properties":{"success":{"type":"boolean"},"message":{"type":"string"},"code":{"type":"string"},"passwordStrength":{"$ref":"#/components/schemas/PasswordStrengthResponse"}}},"CreateServiceUserRequest":{"required":["roleId","type"],"type":"object","properties":{"active":{"type":"boolean"},"roleId":{"type":"string","description":"A UUID formatted string","format":"uuid","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},"type":{"type":"string","enum":["INTERNAL_SERVICE","EXTERNAL_SERVICE"]},"ownerOrganizationId":{"type":"string","description":"A UUID formatted string","format":"uuid","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},"name":{"maxLength":100,"minLength":0,"type":"string"},"accessTokenExpirationInMinutes":{"minimum":1,"type":"integer","format":"int32"}}},"CreateSecretKeyResponse":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"creationTime":{"type":"string","format":"date-time"},"secretKey":{"type":"string"}}},"CreateServiceUserResponse":{"required":["roleId","type"],"type":"object","properties":{"active":{"type":"boolean"},"roleId":{"type":"string","description":"A UUID formatted string","format":"uuid","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},"type":{"type":"string","enum":["INTERNAL_SERVICE","EXTERNAL_SERVICE"]},"ownerOrganizationId":{"type":"string","description":"A UUID formatted string","format":"uuid","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},"name":{"maxLength":100,"minLength":0,"type":"string"},"accessTokenExpirationInMinutes":{"minimum":1,"type":"integer","format":"int32"},"id":{"type":"string","format":"uuid"},"secretKeyData":{"$ref":"#/components/schemas/CreateSecretKeyResponse"}}},"ServiceUserAccessTokenRequest":{"required":["id","secretKey"],"type":"object","properties":{"id":{"type":"string","description":"A UUID formatted string","format":"uuid","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},"secretKey":{"type":"string"}}},"ServiceUserAccessTokenResponse":{"type":"object","properties":{"accessToken":{"type":"string"},"accessTokenExpiration":{"type":"string","format":"date-time"}}},"TokenOperationResponse":{"type":"object","properties":{"operationData":{"type":"object","additionalProperties":{"type":"object"}}}},"UpdateUserRequest":{"type":"object","properties":{"username":{"type":"string","description":"user's username. If the credential type is OTP, should be a valid phone (An E.164 formatted phone number e.g +12345678901)"},"locked":{"type":"boolean"},"active":{"type":"boolean"},"groupIds":{"uniqueItems":true,"type":"array","items":{"type":"string","format":"uuid"}},"idPs":{"uniqueItems":true,"type":"array","items":{"type":"string","enum":["UMS","ADFS"]}},"mfa":{"$ref":"#/components/schemas/Mfa"}}},"Password":{"required":["current","new"],"type":"object","properties":{"current":{"type":"string"},"new":{"type":"string"}}},"SelfUpdateUserRequest":{"type":"object","properties":{"password":{"$ref":"#/components/schemas/Password"},"mfa":{"$ref":"#/components/schemas/Mfa"}}},"UpdateServiceUserV2Request":{"type":"object","properties":{"active":{"type":"boolean"},"roleId":{"type":"string","description":"A UUID formatted string","format":"uuid","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}}},"SecretKeyData":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"creationTime":{"type":"string","format":"date-time"}}},"UpdateServiceUserV2Response":{"required":["roleId","type"],"type":"object","properties":{"active":{"type":"boolean"},"roleId":{"type":"string","description":"A UUID formatted string","format":"uuid","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},"type":{"type":"string","enum":["INTERNAL_SERVICE","EXTERNAL_SERVICE"]},"ownerOrganizationId":{"type":"string","description":"A UUID formatted string","format":"uuid","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},"name":{"maxLength":100,"minLength":0,"type":"string"},"accessTokenExpirationInMinutes":{"minimum":1,"type":"integer","format":"int32"},"id":{"type":"string","format":"uuid"},"secretKeys":{"type":"array","items":{"$ref":"#/components/schemas/SecretKeyData"}}}},"FilterV2":{"type":"object","properties":{"in":{"type":"array","description":"List of values for the IN operator","items":{"type":"string","description":"List of values for the IN operator"}},"eq":{"type":"object","description":"Value for the EQUAL (=) operator, string, numeric, boolean or object","example":50},"lt":{"type":"number","description":"Value for the LESS THAN (<) operator, numeric value only","example":20},"lte":{"type":"number","description":"Value for the LESS THAN OR EQUAL operator (<=), numeric value only","example":25},"gt":{"type":"number","description":"Value for the GREATER THAN operator (>), numeric value only","example":25},"gte":{"type":"number","description":"Value for the GREATER THAN OR EQUAL operator (>=), numeric value only","example":25},"like":{"type":"string","description":"Value for the CONTAINS operator (substring), string value only","example":"John"},"from":{"type":"string","description":"Value for the DATE RANGE FROM operator, date value only,A UTC date in the ISO-8601 format","format":"date-time"},"to":{"type":"string","description":"Value for the DATE RANGE TO operator, date value only,A UTC date in the ISO-8601 format","format":"date-time"},"isNull":{"type":"boolean","description":"If set to true, checks if the field's value is null","example":true},"isNotNull":{"type":"boolean","description":"If set to true, checks if the field's value is not null","example":true},"not":{"type":"object","description":"Value for the NOT EQUAL (!=) operator, string, numeric, boolean or object","example":50},"notIn":{"type":"array","description":"List of values for the NOT IN operator","items":{"type":"string","description":"List of values for the NOT IN operator"}},"filter":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/FilterV2"},"description":"Used for complex logic with filters. Must be supplied only when using with map keys $OR, $AND, $NOT"}},"description":"Each additionalProp can filter one field, inside additionalProp there are many optional conditions that can be used for filtering that field. When multiple conditions are specified, they are bundled together using logical AND operators, this means that only the items that match all filter conditions for that field will be returned"},"Order":{"required":["prop"],"type":"object","properties":{"prop":{"type":"string","description":"The property name for the sort"},"order":{"type":"string","description":"The direction of sort. Default DESC","example":"ASC","enum":["ASC","DESC"]}},"description":"Results can be sorted by multiple fields, the order of the fields in the sort request governs the hierarchy of the sort.The first field is the primary sort, the second is used when two values of the first field are the same, and so forth"},"SearchRequestV2":{"type":"object","properties":{"filter":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/FilterV2"},"description":"Each additionalProp can filter one field, inside additionalProp there are many optional conditions that can be used for filtering that field. When multiple conditions are specified, they are bundled together using logical AND operators, this means that only the items that match all filter conditions for that field will be returned"},"sort":{"type":"array","description":"Results can be sorted by multiple fields, the order of the fields in the sort request governs the hierarchy of the sort.The first field is the primary sort, the second is used when two values of the first field are the same, and so forth","items":{"$ref":"#/components/schemas/Order"}},"freeTextSearch":{"type":"string","description":"Free text search strings - will be bundled to the filters with the logical AND operator. Possible to pass a few strings with space between them, the search will return a result if one of strings appears in the data entity (OR operator).","example":"cat dog"},"limit":{"minimum":1,"type":"integer","format":"int32"},"page":{"minimum":0,"type":"integer","format":"int32"}}},"Metadata":{"type":"object","properties":{"sort":{"type":"array","description":"Sort that was passed in the request","items":{"$ref":"#/components/schemas/Order"}},"filter":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/FilterV2"},"description":"The filter that was passed in the request"},"page":{"$ref":"#/components/schemas/PageMetadata"},"freeTextSearch":{"type":"string","description":"Free text search strings that was passed in the request","example":"cat dog"}}},"PageMetadata":{"type":"object","properties":{"totalResults":{"type":"integer","description":"The total number of items that match the query","format":"int64","example":145},"page":{"type":"integer","description":"Page number","format":"int32","example":3},"limit":{"type":"integer","description":"Number of items per page","format":"int32","example":100}}},"SearchResponseUserResponse":{"required":["data","metadata"],"type":"object","properties":{"data":{"type":"array","description":"List of items that match the search request","items":{"$ref":"#/components/schemas/UserResponse"}},"metadata":{"$ref":"#/components/schemas/Metadata"}}},"GetServiceUserV2Response":{"required":["roleId","type"],"type":"object","properties":{"active":{"type":"boolean"},"roleId":{"type":"string","description":"A UUID formatted string","format":"uuid","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},"type":{"type":"string","enum":["INTERNAL_SERVICE","EXTERNAL_SERVICE"]},"ownerOrganizationId":{"type":"string","description":"A UUID formatted string","format":"uuid","example":"3fa85f64-5717-4562-b3fc-2c963f66afa6"},"name":{"maxLength":100,"minLength":0,"type":"string"},"accessTokenExpirationInMinutes":{"minimum":1,"type":"integer","format":"int32"},"id":{"type":"string","format":"uuid"},"secretKeys":{"type":"array","items":{"$ref":"#/components/schemas/SecretKeyData"}}},"description":"List of items that match the search request"},"SearchResponseGetServiceUserV2Response":{"required":["data","metadata"],"type":"object","properties":{"data":{"type":"array","description":"List of items that match the search request","items":{"$ref":"#/components/schemas/GetServiceUserV2Response"}},"metadata":{"$ref":"#/components/schemas/Metadata"}}},"Credentials":{"type":"object","properties":{"accessKeyId":{"type":"string"},"secretAccessKey":{"type":"string"},"sessionToken":{"type":"string"},"expiration":{"type":"string","format":"date-time"}}},"TemporaryMqttCredentialsResponse":{"type":"object","properties":{"topic":{"type":"string"},"endpoint":{"type":"string"},"credentials":{"$ref":"#/components/schemas/Credentials"},"region":{"type":"string"}}},"GetPublicKeyResponse":{"type":"object","properties":{"publicKey":{"type":"string"}}},"VersionResponse":{"type":"object","properties":{"version":{"type":"string"},"springVersion":{"type":"string"},"traceId":{"type":"string"}}}},"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}}}}